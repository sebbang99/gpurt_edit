; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -global-isel -march=amdgcn -mcpu=fiji -verify-machineinstrs < %s | FileCheck -check-prefixes=PRE-GFX10,VI %s
; RUN: llc -global-isel -march=amdgcn -mcpu=gfx900 -verify-machineinstrs < %s | FileCheck -check-prefixes=PRE-GFX10,GFX9 %s
; RUN: llc -global-isel -march=amdgcn -mcpu=gfx1010 -mattr=+wavefrontsize32,-wavefrontsize64 -verify-machineinstrs < %s | FileCheck -check-prefixes=GFX10-32 %s
; RUN: llc -global-isel -march=amdgcn -mcpu=gfx1010 -mattr=-wavefrontsize32,+wavefrontsize64 -verify-machineinstrs < %s | FileCheck -check-prefixes=GFX10-64 %s

define amdgpu_ps void @test_waterfall_readlane(i32 addrspace(1)* inreg %out, <2 x i32> addrspace(1)* inreg %in, i32 %tid) #1 {
; VI-LABEL: test_waterfall_readlane:
; VI:       ; %bb.0:
; VI-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; VI-NEXT:    v_lshlrev_b64 v[0:1], 3, v[0:1]
; VI-NEXT:    v_mov_b32_e32 v2, s2
; VI-NEXT:    v_mov_b32_e32 v3, s3
; VI-NEXT:    v_add_u32_e32 v0, vcc, v2, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, v3, v1, vcc
; VI-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; VI-NEXT:    s_mov_b64 s[2:3], exec
; VI-NEXT:  .LBB0_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_readfirstlane_b32 s6, v1
; VI-NEXT:    v_cmp_eq_u32_e64 s[4:5], s6, v1
; VI-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_nop 1
; VI-NEXT:    v_readlane_b32 s6, v0, s6
; VI-NEXT:    v_mov_b32_e32 v2, s6
; VI-NEXT:    ; implicit-def: $vgpr0_vgpr1
; VI-NEXT:    s_xor_b64 exec, exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB0_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[2:3]
; VI-NEXT:    v_mov_b32_e32 v0, s0
; VI-NEXT:    v_mov_b32_e32 v1, s1
; VI-NEXT:    flat_store_dword v[0:1], v2
; VI-NEXT:    s_endpgm
;
; GFX9-LABEL: test_waterfall_readlane:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; GFX9-NEXT:    v_lshlrev_b64 v[0:1], 3, v[0:1]
; GFX9-NEXT:    v_mov_b32_e32 v2, s2
; GFX9-NEXT:    v_mov_b32_e32 v3, s3
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, v2, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, v3, v1, vcc
; GFX9-NEXT:    global_load_dwordx2 v[0:1], v[0:1], off
; GFX9-NEXT:    s_mov_b64 s[2:3], exec
; GFX9-NEXT:  .LBB0_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_readfirstlane_b32 s6, v1
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[4:5], s6, v1
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_nop 1
; GFX9-NEXT:    v_readlane_b32 s6, v0, s6
; GFX9-NEXT:    v_mov_b32_e32 v2, s6
; GFX9-NEXT:    ; implicit-def: $vgpr0_vgpr1
; GFX9-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB0_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[2:3]
; GFX9-NEXT:    v_mov_b32_e32 v0, 0
; GFX9-NEXT:    global_store_dword v0, v2, s[0:1]
; GFX9-NEXT:    s_endpgm
;
; GFX10-32-LABEL: test_waterfall_readlane:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v2, s2
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s3
; GFX10-32-NEXT:    s_mov_b32 s2, exec_lo
; GFX10-32-NEXT:    v_lshlrev_b64 v[0:1], 3, v[0:1]
; GFX10-32-NEXT:    v_add_co_u32 v0, vcc_lo, v2, v0
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v1, vcc_lo, v3, v1, vcc_lo
; GFX10-32-NEXT:    global_load_dwordx2 v[0:1], v[0:1], off
; GFX10-32-NEXT:  .LBB0_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_readfirstlane_b32 s3, v1
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s4, s3, v1
; GFX10-32-NEXT:    s_and_saveexec_b32 s4, s4
; GFX10-32-NEXT:    v_readlane_b32 s3, v0, s3
; GFX10-32-NEXT:    ; implicit-def: $vgpr0_vgpr1
; GFX10-32-NEXT:    v_mov_b32_e32 v2, s3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s4
; GFX10-32-NEXT:    s_cbranch_execnz .LBB0_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s2
; GFX10-32-NEXT:    v_mov_b32_e32 v0, 0
; GFX10-32-NEXT:    global_store_dword v0, v2, s[0:1]
; GFX10-32-NEXT:    s_endpgm
;
; GFX10-64-LABEL: test_waterfall_readlane:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v2, s2
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s3
; GFX10-64-NEXT:    s_mov_b64 s[2:3], exec
; GFX10-64-NEXT:    v_lshlrev_b64 v[0:1], 3, v[0:1]
; GFX10-64-NEXT:    v_add_co_u32 v0, vcc, v2, v0
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v1, vcc, v3, v1, vcc
; GFX10-64-NEXT:    global_load_dwordx2 v[0:1], v[0:1], off
; GFX10-64-NEXT:  .LBB0_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_readfirstlane_b32 s6, v1
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[4:5], s6, v1
; GFX10-64-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX10-64-NEXT:    v_readlane_b32 s6, v0, s6
; GFX10-64-NEXT:    ; implicit-def: $vgpr0_vgpr1
; GFX10-64-NEXT:    v_mov_b32_e32 v2, s6
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB0_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[2:3]
; GFX10-64-NEXT:    v_mov_b32_e32 v0, 0
; GFX10-64-NEXT:    global_store_dword v0, v2, s[0:1]
; GFX10-64-NEXT:    s_endpgm
  %gep.in = getelementptr <2 x i32>, <2 x i32> addrspace(1)* %in, i32 %tid
  %args = load <2 x i32>, <2 x i32> addrspace(1)* %gep.in
  %value = extractelement <2 x i32> %args, i32 0
  %lane = extractelement <2 x i32> %args, i32 1
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %lane)
  %readlane = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %lane)
  %readlane1 = call i32 @llvm.amdgcn.readlane(i32 %value, i32 %readlane)
  %readlane2 = call i32 @llvm.amdgcn.waterfall.end.i32(i32 %wf_token, i32 %readlane1)
  ; This store instruction should be outside the waterfall loop and the value
  ; being stored generated incrementally in the loop itself
  store i32 %readlane2, i32 addrspace(1)* %out, align 4

  ret void
}

define amdgpu_ps <4 x float> @test_waterfall_non_uniform_img(<8 x i32> addrspace(4)* inreg %in, i32 %index, float %s, <4 x i32> inreg %samp) #1 {
; PRE-GFX10-LABEL: test_waterfall_non_uniform_img:
; PRE-GFX10:       ; %bb.0:
; PRE-GFX10-NEXT:    s_mov_b64 s[6:7], exec
; PRE-GFX10-NEXT:    s_wqm_b64 exec, exec
; PRE-GFX10-NEXT:    v_mov_b32_e32 v5, v0
; PRE-GFX10-NEXT:    v_mov_b32_e32 v4, v1
; PRE-GFX10-NEXT:    s_mov_b32 s8, s2
; PRE-GFX10-NEXT:    s_mov_b32 s9, s3
; PRE-GFX10-NEXT:    s_mov_b32 s10, s4
; PRE-GFX10-NEXT:    s_mov_b32 s11, s5
; PRE-GFX10-NEXT:    s_mov_b64 s[2:3], exec
; PRE-GFX10-NEXT:  .LBB1_1: ; =>This Inner Loop Header: Depth=1
; PRE-GFX10-NEXT:    v_readfirstlane_b32 s4, v5
; PRE-GFX10-NEXT:    v_cmp_eq_u32_e64 s[12:13], s4, v5
; PRE-GFX10-NEXT:    s_and_saveexec_b64 s[20:21], s[12:13]
; PRE-GFX10-NEXT:    s_ashr_i32 s5, s4, 31
; PRE-GFX10-NEXT:    s_lshl_b64 s[4:5], s[4:5], 5
; PRE-GFX10-NEXT:    s_add_u32 s4, s0, s4
; PRE-GFX10-NEXT:    s_addc_u32 s5, s1, s5
; PRE-GFX10-NEXT:    s_load_dwordx8 s[12:19], s[4:5], 0x0
; PRE-GFX10-NEXT:    ; implicit-def: $vgpr5
; PRE-GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; PRE-GFX10-NEXT:    image_sample v[0:3], v4, s[12:19], s[8:11] dmask:0xf
; PRE-GFX10-NEXT:    ; implicit-def: $vgpr4
; PRE-GFX10-NEXT:    s_xor_b64 exec, exec, s[20:21]
; PRE-GFX10-NEXT:    s_cbranch_execnz .LBB1_1
; PRE-GFX10-NEXT:  ; %bb.2:
; PRE-GFX10-NEXT:    s_mov_b64 exec, s[2:3]
; PRE-GFX10-NEXT:    s_and_b64 exec, exec, s[6:7]
; PRE-GFX10-NEXT:    s_waitcnt vmcnt(0)
; PRE-GFX10-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_non_uniform_img:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s6, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v5, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v1
; GFX10-32-NEXT:    s_mov_b32 s8, s2
; GFX10-32-NEXT:    s_mov_b32 s9, s3
; GFX10-32-NEXT:    s_mov_b32 s10, s4
; GFX10-32-NEXT:    s_mov_b32 s11, s5
; GFX10-32-NEXT:    s_mov_b32 s2, exec_lo
; GFX10-32-NEXT:  .LBB1_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s4, v5
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s3, s4, v5
; GFX10-32-NEXT:    s_and_saveexec_b32 s3, s3
; GFX10-32-NEXT:    s_ashr_i32 s5, s4, 31
; GFX10-32-NEXT:    ; implicit-def: $vgpr5
; GFX10-32-NEXT:    s_lshl_b64 s[4:5], s[4:5], 5
; GFX10-32-NEXT:    s_add_u32 s4, s0, s4
; GFX10-32-NEXT:    s_addc_u32 s5, s1, s5
; GFX10-32-NEXT:    s_load_dwordx8 s[12:19], s[4:5], 0x0
; GFX10-32-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-32-NEXT:    image_sample v[0:3], v4, s[12:19], s[8:11] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s3
; GFX10-32-NEXT:    s_cbranch_execnz .LBB1_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s2
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s6
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_non_uniform_img:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v5, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v1
; GFX10-64-NEXT:    s_mov_b32 s8, s2
; GFX10-64-NEXT:    s_mov_b32 s9, s3
; GFX10-64-NEXT:    s_mov_b32 s10, s4
; GFX10-64-NEXT:    s_mov_b32 s11, s5
; GFX10-64-NEXT:    s_mov_b64 s[2:3], exec
; GFX10-64-NEXT:  .LBB1_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s4, v5
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[12:13], s4, v5
; GFX10-64-NEXT:    s_and_saveexec_b64 s[20:21], s[12:13]
; GFX10-64-NEXT:    s_ashr_i32 s5, s4, 31
; GFX10-64-NEXT:    ; implicit-def: $vgpr5
; GFX10-64-NEXT:    s_lshl_b64 s[4:5], s[4:5], 5
; GFX10-64-NEXT:    s_add_u32 s4, s0, s4
; GFX10-64-NEXT:    s_addc_u32 s5, s1, s5
; GFX10-64-NEXT:    s_load_dwordx8 s[12:19], s[4:5], 0x0
; GFX10-64-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-64-NEXT:    image_sample v[0:3], v4, s[12:19], s[8:11] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[20:21]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB1_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[2:3]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %index)
  %s_idx = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %index)
  %ptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4) * %ptr, align 32
  %r = call <4 x float> @llvm.amdgcn.image.sample.1d.v4f32.f32(i32 15, float %s, <8 x i32> %rsrc, <4 x i32> %samp, i1 0, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %wf_token, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps <4 x float> @test_waterfall_non_uniform_img_single_read(<8 x i32> addrspace(4)* inreg %in, i32 %index, float %s, <4 x i32> inreg %samp) #1 {
; VI-LABEL: test_waterfall_non_uniform_img_single_read:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_mov_b32_e32 v4, v0
; VI-NEXT:    v_ashrrev_i32_e32 v5, 31, v4
; VI-NEXT:    v_mov_b32_e32 v6, v1
; VI-NEXT:    v_lshlrev_b64 v[0:1], 5, v[4:5]
; VI-NEXT:    v_mov_b32_e32 v3, s1
; VI-NEXT:    v_mov_b32_e32 v2, s0
; VI-NEXT:    v_add_u32_e32 v0, vcc, v2, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, v3, v1, vcc
; VI-NEXT:    v_add_u32_e32 v2, vcc, 16, v0
; VI-NEXT:    v_addc_u32_e32 v3, vcc, 0, v1, vcc
; VI-NEXT:    flat_load_dwordx4 v[7:10], v[0:1]
; VI-NEXT:    flat_load_dwordx4 v[11:14], v[2:3]
; VI-NEXT:    s_mov_b32 s8, s2
; VI-NEXT:    s_mov_b32 s9, s3
; VI-NEXT:    s_mov_b32 s10, s4
; VI-NEXT:    s_mov_b32 s11, s5
; VI-NEXT:    s_mov_b64 s[0:1], exec
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:  .LBB2_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s2, v4
; VI-NEXT:    v_cmp_eq_u32_e64 s[2:3], s2, v4
; VI-NEXT:    s_and_saveexec_b64 s[2:3], s[2:3]
; VI-NEXT:    v_readfirstlane_b32 s12, v7
; VI-NEXT:    v_readfirstlane_b32 s13, v8
; VI-NEXT:    v_readfirstlane_b32 s14, v9
; VI-NEXT:    v_readfirstlane_b32 s15, v10
; VI-NEXT:    v_readfirstlane_b32 s16, v11
; VI-NEXT:    v_readfirstlane_b32 s17, v12
; VI-NEXT:    v_readfirstlane_b32 s18, v13
; VI-NEXT:    v_readfirstlane_b32 s19, v14
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14
; VI-NEXT:    s_nop 4
; VI-NEXT:    image_sample v[0:3], v6, s[12:19], s[8:11] dmask:0xf
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    s_xor_b64 exec, exec, s[2:3]
; VI-NEXT:    s_cbranch_execnz .LBB2_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[0:1]
; VI-NEXT:    s_and_b64 exec, exec, s[6:7]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_non_uniform_img_single_read:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_mov_b32_e32 v4, v0
; GFX9-NEXT:    v_ashrrev_i32_e32 v5, 31, v4
; GFX9-NEXT:    v_mov_b32_e32 v6, v1
; GFX9-NEXT:    v_lshlrev_b64 v[0:1], 5, v[4:5]
; GFX9-NEXT:    v_mov_b32_e32 v3, s1
; GFX9-NEXT:    v_mov_b32_e32 v2, s0
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, v2, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, v3, v1, vcc
; GFX9-NEXT:    global_load_dwordx4 v[7:10], v[0:1], off
; GFX9-NEXT:    global_load_dwordx4 v[11:14], v[0:1], off offset:16
; GFX9-NEXT:    s_mov_b32 s8, s2
; GFX9-NEXT:    s_mov_b32 s9, s3
; GFX9-NEXT:    s_mov_b32 s10, s4
; GFX9-NEXT:    s_mov_b32 s11, s5
; GFX9-NEXT:    s_mov_b64 s[0:1], exec
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:  .LBB2_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s2, v4
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[2:3], s2, v4
; GFX9-NEXT:    s_and_saveexec_b64 s[2:3], s[2:3]
; GFX9-NEXT:    v_readfirstlane_b32 s12, v7
; GFX9-NEXT:    v_readfirstlane_b32 s13, v8
; GFX9-NEXT:    v_readfirstlane_b32 s14, v9
; GFX9-NEXT:    v_readfirstlane_b32 s15, v10
; GFX9-NEXT:    v_readfirstlane_b32 s16, v11
; GFX9-NEXT:    v_readfirstlane_b32 s17, v12
; GFX9-NEXT:    v_readfirstlane_b32 s18, v13
; GFX9-NEXT:    v_readfirstlane_b32 s19, v14
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14
; GFX9-NEXT:    s_nop 4
; GFX9-NEXT:    image_sample v[0:3], v6, s[12:19], s[8:11] dmask:0xf
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    s_xor_b64 exec, exec, s[2:3]
; GFX9-NEXT:    s_cbranch_execnz .LBB2_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[0:1]
; GFX9-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_non_uniform_img_single_read:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s6, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v6, v1
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-32-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-32-NEXT:    s_mov_b32 s8, s2
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v5, 31, v4
; GFX10-32-NEXT:    s_mov_b32 s9, s3
; GFX10-32-NEXT:    s_mov_b32 s10, s4
; GFX10-32-NEXT:    s_mov_b32 s11, s5
; GFX10-32-NEXT:    s_mov_b32 s0, exec_lo
; GFX10-32-NEXT:    v_lshlrev_b64 v[0:1], 5, v[4:5]
; GFX10-32-NEXT:    v_add_co_u32 v0, vcc_lo, v2, v0
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v1, vcc_lo, v3, v1, vcc_lo
; GFX10-32-NEXT:    s_clause 0x1
; GFX10-32-NEXT:    global_load_dwordx4 v[7:10], v[0:1], off
; GFX10-32-NEXT:    global_load_dwordx4 v[11:14], v[0:1], off offset:16
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:  .LBB2_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v4
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s1, s1, v4
; GFX10-32-NEXT:    s_and_saveexec_b32 s1, s1
; GFX10-32-NEXT:    v_readfirstlane_b32 s12, v7
; GFX10-32-NEXT:    v_readfirstlane_b32 s13, v8
; GFX10-32-NEXT:    v_readfirstlane_b32 s14, v9
; GFX10-32-NEXT:    v_readfirstlane_b32 s15, v10
; GFX10-32-NEXT:    v_readfirstlane_b32 s16, v11
; GFX10-32-NEXT:    v_readfirstlane_b32 s17, v12
; GFX10-32-NEXT:    v_readfirstlane_b32 s18, v13
; GFX10-32-NEXT:    v_readfirstlane_b32 s19, v14
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    ; implicit-def: $vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14
; GFX10-32-NEXT:    image_sample v[0:3], v6, s[12:19], s[8:11] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-32-NEXT:    ; implicit-def: $vgpr6
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s1
; GFX10-32-NEXT:    s_cbranch_execnz .LBB2_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s0
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s6
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_non_uniform_img_single_read:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v6, v1
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-64-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-64-NEXT:    s_mov_b32 s8, s2
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v5, 31, v4
; GFX10-64-NEXT:    s_mov_b32 s9, s3
; GFX10-64-NEXT:    s_mov_b32 s10, s4
; GFX10-64-NEXT:    s_mov_b32 s11, s5
; GFX10-64-NEXT:    s_mov_b64 s[0:1], exec
; GFX10-64-NEXT:    v_lshlrev_b64 v[0:1], 5, v[4:5]
; GFX10-64-NEXT:    v_add_co_u32 v0, vcc, v2, v0
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v1, vcc, v3, v1, vcc
; GFX10-64-NEXT:    s_clause 0x1
; GFX10-64-NEXT:    global_load_dwordx4 v[7:10], v[0:1], off
; GFX10-64-NEXT:    global_load_dwordx4 v[11:14], v[0:1], off offset:16
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:  .LBB2_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s2, v4
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[2:3], s2, v4
; GFX10-64-NEXT:    s_and_saveexec_b64 s[2:3], s[2:3]
; GFX10-64-NEXT:    v_readfirstlane_b32 s12, v7
; GFX10-64-NEXT:    v_readfirstlane_b32 s13, v8
; GFX10-64-NEXT:    v_readfirstlane_b32 s14, v9
; GFX10-64-NEXT:    v_readfirstlane_b32 s15, v10
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v11
; GFX10-64-NEXT:    v_readfirstlane_b32 s17, v12
; GFX10-64-NEXT:    v_readfirstlane_b32 s18, v13
; GFX10-64-NEXT:    v_readfirstlane_b32 s19, v14
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    ; implicit-def: $vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14
; GFX10-64-NEXT:    image_sample v[0:3], v6, s[12:19], s[8:11] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-64-NEXT:    ; implicit-def: $vgpr6
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[2:3]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB2_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[0:1]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
  %ptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %index
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4) * %ptr, align 32
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %index)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %wf_token, <8 x i32> %rsrc)
  %r = call <4 x float> @llvm.amdgcn.image.sample.1d.v4f32.f32(i32 15, float %s, <8 x i32> %s_rsrc, <4 x i32> %samp, i1 0, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %wf_token, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps void @test_multiple_groups(i32 addrspace(1)* inreg %out1, i32 addrspace(1)* inreg %out2, i32 %idx1, i32 %idx2, i32 %val) #1 {
; VI-LABEL: test_multiple_groups:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[4:5], exec
; VI-NEXT:  .LBB3_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s8, v0
; VI-NEXT:    v_cmp_eq_u32_e64 s[6:7], s8, v0
; VI-NEXT:    s_and_saveexec_b64 s[6:7], s[6:7]
; VI-NEXT:    s_nop 1
; VI-NEXT:    v_readlane_b32 s8, v2, s8
; VI-NEXT:    v_mov_b32_e32 v3, s8
; VI-NEXT:    ; implicit-def: $vgpr0
; VI-NEXT:    s_xor_b64 exec, exec, s[6:7]
; VI-NEXT:    s_cbranch_execnz .LBB3_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[4:5]
; VI-NEXT:    v_mov_b32_e32 v5, s1
; VI-NEXT:    v_mov_b32_e32 v4, s0
; VI-NEXT:    s_mov_b64 s[0:1], exec
; VI-NEXT:    flat_store_dword v[4:5], v3
; VI-NEXT:  .LBB3_3: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s6, v1
; VI-NEXT:    v_cmp_eq_u32_e64 s[4:5], s6, v1
; VI-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_nop 1
; VI-NEXT:    v_readlane_b32 s6, v2, s6
; VI-NEXT:    v_mov_b32_e32 v0, s6
; VI-NEXT:    ; implicit-def: $vgpr1
; VI-NEXT:    ; implicit-def: $vgpr2
; VI-NEXT:    s_xor_b64 exec, exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB3_3
; VI-NEXT:  ; %bb.4:
; VI-NEXT:    s_mov_b64 exec, s[0:1]
; VI-NEXT:    v_mov_b32_e32 v1, s2
; VI-NEXT:    v_mov_b32_e32 v2, s3
; VI-NEXT:    flat_store_dword v[1:2], v0
; VI-NEXT:    s_endpgm
;
; GFX9-LABEL: test_multiple_groups:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[4:5], exec
; GFX9-NEXT:  .LBB3_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s8, v0
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[6:7], s8, v0
; GFX9-NEXT:    s_and_saveexec_b64 s[6:7], s[6:7]
; GFX9-NEXT:    s_nop 1
; GFX9-NEXT:    v_readlane_b32 s8, v2, s8
; GFX9-NEXT:    v_mov_b32_e32 v3, s8
; GFX9-NEXT:    ; implicit-def: $vgpr0
; GFX9-NEXT:    s_xor_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_cbranch_execnz .LBB3_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[4:5]
; GFX9-NEXT:    v_mov_b32_e32 v0, 0
; GFX9-NEXT:    global_store_dword v0, v3, s[0:1]
; GFX9-NEXT:    s_mov_b64 s[0:1], exec
; GFX9-NEXT:  .LBB3_3: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s6, v1
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[4:5], s6, v1
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_nop 1
; GFX9-NEXT:    v_readlane_b32 s6, v2, s6
; GFX9-NEXT:    v_mov_b32_e32 v3, s6
; GFX9-NEXT:    ; implicit-def: $vgpr1
; GFX9-NEXT:    ; implicit-def: $vgpr2
; GFX9-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB3_3
; GFX9-NEXT:  ; %bb.4:
; GFX9-NEXT:    s_mov_b64 exec, s[0:1]
; GFX9-NEXT:    global_store_dword v0, v3, s[2:3]
; GFX9-NEXT:    s_endpgm
;
; GFX10-32-LABEL: test_multiple_groups:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s4, exec_lo
; GFX10-32-NEXT:  .LBB3_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s5, v0
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s6, s5, v0
; GFX10-32-NEXT:    s_and_saveexec_b32 s6, s6
; GFX10-32-NEXT:    v_readlane_b32 s5, v2, s5
; GFX10-32-NEXT:    ; implicit-def: $vgpr0
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s5
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s6
; GFX10-32-NEXT:    s_cbranch_execnz .LBB3_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s4
; GFX10-32-NEXT:    v_mov_b32_e32 v0, 0
; GFX10-32-NEXT:    global_store_dword v0, v3, s[0:1]
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_mov_b32 s0, exec_lo
; GFX10-32-NEXT:  .LBB3_3: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v1
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s4, s1, v1
; GFX10-32-NEXT:    s_and_saveexec_b32 s4, s4
; GFX10-32-NEXT:    v_readlane_b32 s1, v2, s1
; GFX10-32-NEXT:    ; implicit-def: $vgpr1
; GFX10-32-NEXT:    ; implicit-def: $vgpr2
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s4
; GFX10-32-NEXT:    s_cbranch_execnz .LBB3_3
; GFX10-32-NEXT:  ; %bb.4:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s0
; GFX10-32-NEXT:    global_store_dword v0, v3, s[2:3]
; GFX10-32-NEXT:    s_endpgm
;
; GFX10-64-LABEL: test_multiple_groups:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[4:5], exec
; GFX10-64-NEXT:  .LBB3_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v0
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[6:7], s8, v0
; GFX10-64-NEXT:    s_and_saveexec_b64 s[6:7], s[6:7]
; GFX10-64-NEXT:    v_readlane_b32 s8, v2, s8
; GFX10-64-NEXT:    ; implicit-def: $vgpr0
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s8
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB3_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[4:5]
; GFX10-64-NEXT:    v_mov_b32_e32 v0, 0
; GFX10-64-NEXT:    global_store_dword v0, v3, s[0:1]
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_mov_b64 s[0:1], exec
; GFX10-64-NEXT:  .LBB3_3: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s6, v1
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[4:5], s6, v1
; GFX10-64-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX10-64-NEXT:    v_readlane_b32 s6, v2, s6
; GFX10-64-NEXT:    ; implicit-def: $vgpr1
; GFX10-64-NEXT:    ; implicit-def: $vgpr2
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s6
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB3_3
; GFX10-64-NEXT:  ; %bb.4:
; GFX10-64-NEXT:    s_mov_b64 exec, s[0:1]
; GFX10-64-NEXT:    global_store_dword v0, v3, s[2:3]
; GFX10-64-NEXT:    s_endpgm
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %idx1)
  %readlane1 = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %idx1)
  %readlane1.1 = call i32 @llvm.amdgcn.readlane(i32 %val, i32 %readlane1)
  %readlane1.2 = call i32 @llvm.amdgcn.waterfall.end.i32(i32 %wf_token, i32 %readlane1.1)
  ; This store instruction should be outside the waterfall loop and the value
  ; being stored generated incrementally in the loop itself
  store i32 %readlane1.2, i32 addrspace(1)* %out1, align 4

  %wf_token2 = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %idx2)
  %readlane2 = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token2, i32 %idx2)
  %readlane2.1 = call i32 @llvm.amdgcn.readlane(i32 %val, i32 %readlane2)
  %readlane2.2 = call i32 @llvm.amdgcn.waterfall.end.i32(i32 %wf_token2, i32 %readlane2.1)
  store i32 %readlane2.2, i32 addrspace(1)* %out2, align 4

  ret void
}


define amdgpu_ps <4 x float> @test_waterfall_non_uniform_img_multi_rl(<8 x i32> addrspace(4)* inreg %in, <4 x i32> addrspace(4)* inreg %samp_in, i32 %index, float %s, i32 %val) #1 {
; VI-LABEL: test_waterfall_non_uniform_img_multi_rl:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[4:5], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_mov_b32_e32 v5, v0
; VI-NEXT:    v_mov_b32_e32 v4, v1
; VI-NEXT:    v_mov_b32_e32 v6, v2
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:  .LBB4_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s8, v5
; VI-NEXT:    v_cmp_eq_u32_e64 s[10:11], s8, v5
; VI-NEXT:    s_and_saveexec_b64 s[20:21], s[10:11]
; VI-NEXT:    s_ashr_i32 s9, s8, 31
; VI-NEXT:    s_lshl_b64 s[8:9], s[8:9], 5
; VI-NEXT:    v_readfirstlane_b32 s10, v6
; VI-NEXT:    s_add_u32 s8, s0, s8
; VI-NEXT:    s_addc_u32 s9, s1, s9
; VI-NEXT:    s_ashr_i32 s11, s10, 31
; VI-NEXT:    s_lshl_b64 s[10:11], s[10:11], 4
; VI-NEXT:    s_add_u32 s16, s2, s10
; VI-NEXT:    s_addc_u32 s17, s3, s11
; VI-NEXT:    s_load_dwordx8 s[8:15], s[8:9], 0x0
; VI-NEXT:    s_load_dwordx4 s[16:19], s[16:17], 0x0
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    s_waitcnt lgkmcnt(0)
; VI-NEXT:    image_sample v[0:3], v4, s[8:15], s[16:19] dmask:0xf
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    s_xor_b64 exec, exec, s[20:21]
; VI-NEXT:    s_cbranch_execnz .LBB4_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[6:7]
; VI-NEXT:    s_and_b64 exec, exec, s[4:5]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_non_uniform_img_multi_rl:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[4:5], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_mov_b32_e32 v5, v0
; GFX9-NEXT:    v_mov_b32_e32 v4, v1
; GFX9-NEXT:    v_mov_b32_e32 v6, v2
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:  .LBB4_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s8, v5
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[10:11], s8, v5
; GFX9-NEXT:    s_and_saveexec_b64 s[20:21], s[10:11]
; GFX9-NEXT:    s_ashr_i32 s9, s8, 31
; GFX9-NEXT:    s_lshl_b64 s[8:9], s[8:9], 5
; GFX9-NEXT:    v_readfirstlane_b32 s10, v6
; GFX9-NEXT:    s_add_u32 s22, s0, s8
; GFX9-NEXT:    s_addc_u32 s23, s1, s9
; GFX9-NEXT:    s_ashr_i32 s11, s10, 31
; GFX9-NEXT:    s_lshl_b64 s[8:9], s[10:11], 4
; GFX9-NEXT:    s_add_u32 s24, s2, s8
; GFX9-NEXT:    s_addc_u32 s25, s3, s9
; GFX9-NEXT:    s_load_dwordx8 s[8:15], s[22:23], 0x0
; GFX9-NEXT:    s_load_dwordx4 s[16:19], s[24:25], 0x0
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    image_sample v[0:3], v4, s[8:15], s[16:19] dmask:0xf
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    s_xor_b64 exec, exec, s[20:21]
; GFX9-NEXT:    s_cbranch_execnz .LBB4_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[6:7]
; GFX9-NEXT:    s_and_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_non_uniform_img_multi_rl:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s4, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v6, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v1
; GFX10-32-NEXT:    v_mov_b32_e32 v5, v2
; GFX10-32-NEXT:    s_mov_b32 s5, exec_lo
; GFX10-32-NEXT:  .LBB4_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s6, v6
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s7, s6, v6
; GFX10-32-NEXT:    s_and_saveexec_b32 s22, s7
; GFX10-32-NEXT:    s_ashr_i32 s7, s6, 31
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v5
; GFX10-32-NEXT:    s_lshl_b64 s[6:7], s[6:7], 5
; GFX10-32-NEXT:    ; implicit-def: $vgpr6
; GFX10-32-NEXT:    ; implicit-def: $vgpr5
; GFX10-32-NEXT:    s_add_u32 s6, s0, s6
; GFX10-32-NEXT:    s_addc_u32 s7, s1, s7
; GFX10-32-NEXT:    s_ashr_i32 s9, s8, 31
; GFX10-32-NEXT:    s_lshl_b64 s[8:9], s[8:9], 4
; GFX10-32-NEXT:    s_add_u32 s20, s2, s8
; GFX10-32-NEXT:    s_addc_u32 s21, s3, s9
; GFX10-32-NEXT:    s_load_dwordx8 s[8:15], s[6:7], 0x0
; GFX10-32-NEXT:    s_load_dwordx4 s[16:19], s[20:21], 0x0
; GFX10-32-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-32-NEXT:    image_sample v[0:3], v4, s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s22
; GFX10-32-NEXT:    s_cbranch_execnz .LBB4_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s5
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s4
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_non_uniform_img_multi_rl:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[4:5], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v6, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v1
; GFX10-64-NEXT:    v_mov_b32_e32 v5, v2
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:  .LBB4_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v6
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[10:11], s8, v6
; GFX10-64-NEXT:    s_and_saveexec_b64 s[20:21], s[10:11]
; GFX10-64-NEXT:    s_ashr_i32 s9, s8, 31
; GFX10-64-NEXT:    v_readfirstlane_b32 s10, v5
; GFX10-64-NEXT:    s_lshl_b64 s[8:9], s[8:9], 5
; GFX10-64-NEXT:    ; implicit-def: $vgpr6
; GFX10-64-NEXT:    ; implicit-def: $vgpr5
; GFX10-64-NEXT:    s_add_u32 s22, s0, s8
; GFX10-64-NEXT:    s_addc_u32 s23, s1, s9
; GFX10-64-NEXT:    s_ashr_i32 s11, s10, 31
; GFX10-64-NEXT:    s_lshl_b64 s[8:9], s[10:11], 4
; GFX10-64-NEXT:    s_add_u32 s24, s2, s8
; GFX10-64-NEXT:    s_addc_u32 s25, s3, s9
; GFX10-64-NEXT:    s_load_dwordx8 s[8:15], s[22:23], 0x0
; GFX10-64-NEXT:    s_load_dwordx4 s[16:19], s[24:25], 0x0
; GFX10-64-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-64-NEXT:    image_sample v[0:3], v4, s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[20:21]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB4_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[6:7]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[4:5]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %index)
  %s_idx = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %index)
  %s_idx2 = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %val)
  %ptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %ptr2 = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %samp_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4) * %ptr, align 32
  %samp = load <4 x i32>, <4 x i32> addrspace(4) * %ptr2, align 32
  %r = call <4 x float> @llvm.amdgcn.image.sample.1d.v4f32.f32(i32 15, float %s, <8 x i32> %rsrc, <4 x i32> %samp, i1 0, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %wf_token, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps <4 x float> @test_waterfall_non_uni_img_2_idx(<8 x i32> addrspace(4)* inreg %in, <4 x i32> addrspace(4)* inreg %samp_in, i32 %index1, i32 %index2, float %s) #1 {
; VI-LABEL: test_waterfall_non_uni_img_2_idx:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[4:5], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_mov_b32_e32 v4, v0
; VI-NEXT:    v_mov_b32_e32 v5, v1
; VI-NEXT:    v_mov_b32_e32 v6, v2
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:  .LBB5_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s12, v4
; VI-NEXT:    v_readfirstlane_b32 s13, v5
; VI-NEXT:    v_cmp_eq_u32_e64 s[8:9], s12, v4
; VI-NEXT:    v_cmp_eq_u32_e64 s[10:11], s13, v5
; VI-NEXT:    s_and_b64 s[8:9], s[8:9], s[10:11]
; VI-NEXT:    s_and_saveexec_b64 s[20:21], s[8:9]
; VI-NEXT:    s_ashr_i32 s9, s12, 31
; VI-NEXT:    s_mov_b32 s8, s12
; VI-NEXT:    s_lshl_b64 s[8:9], s[8:9], 5
; VI-NEXT:    s_add_u32 s8, s0, s8
; VI-NEXT:    s_addc_u32 s9, s1, s9
; VI-NEXT:    s_ashr_i32 s11, s13, 31
; VI-NEXT:    s_mov_b32 s10, s13
; VI-NEXT:    s_lshl_b64 s[10:11], s[10:11], 4
; VI-NEXT:    s_add_u32 s16, s2, s10
; VI-NEXT:    s_addc_u32 s17, s3, s11
; VI-NEXT:    s_load_dwordx8 s[8:15], s[8:9], 0x0
; VI-NEXT:    s_load_dwordx4 s[16:19], s[16:17], 0x0
; VI-NEXT:    ; implicit-def: $vgpr4_vgpr5
; VI-NEXT:    s_waitcnt lgkmcnt(0)
; VI-NEXT:    image_sample v[0:3], v6, s[8:15], s[16:19] dmask:0xf
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    s_xor_b64 exec, exec, s[20:21]
; VI-NEXT:    s_cbranch_execnz .LBB5_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[6:7]
; VI-NEXT:    s_and_b64 exec, exec, s[4:5]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_non_uni_img_2_idx:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[4:5], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_mov_b32_e32 v4, v0
; GFX9-NEXT:    v_mov_b32_e32 v5, v1
; GFX9-NEXT:    v_mov_b32_e32 v6, v2
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:  .LBB5_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s12, v4
; GFX9-NEXT:    v_readfirstlane_b32 s13, v5
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[8:9], s12, v4
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[10:11], s13, v5
; GFX9-NEXT:    s_and_b64 s[8:9], s[8:9], s[10:11]
; GFX9-NEXT:    s_and_saveexec_b64 s[20:21], s[8:9]
; GFX9-NEXT:    s_ashr_i32 s9, s12, 31
; GFX9-NEXT:    s_mov_b32 s8, s12
; GFX9-NEXT:    s_lshl_b64 s[8:9], s[8:9], 5
; GFX9-NEXT:    s_add_u32 s22, s0, s8
; GFX9-NEXT:    s_addc_u32 s23, s1, s9
; GFX9-NEXT:    s_ashr_i32 s9, s13, 31
; GFX9-NEXT:    s_mov_b32 s8, s13
; GFX9-NEXT:    s_lshl_b64 s[8:9], s[8:9], 4
; GFX9-NEXT:    s_add_u32 s24, s2, s8
; GFX9-NEXT:    s_addc_u32 s25, s3, s9
; GFX9-NEXT:    s_load_dwordx8 s[8:15], s[22:23], 0x0
; GFX9-NEXT:    s_load_dwordx4 s[16:19], s[24:25], 0x0
; GFX9-NEXT:    ; implicit-def: $vgpr4_vgpr5
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    image_sample v[0:3], v6, s[8:15], s[16:19] dmask:0xf
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    s_xor_b64 exec, exec, s[20:21]
; GFX9-NEXT:    s_cbranch_execnz .LBB5_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[6:7]
; GFX9-NEXT:    s_and_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_non_uni_img_2_idx:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s4, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v5, v1
; GFX10-32-NEXT:    v_mov_b32_e32 v6, v2
; GFX10-32-NEXT:    s_mov_b32 s5, exec_lo
; GFX10-32-NEXT:  .LBB5_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s6, v4
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v5
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s7, s6, v4
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s9, s8, v5
; GFX10-32-NEXT:    s_and_b32 s7, s7, s9
; GFX10-32-NEXT:    s_and_saveexec_b32 s22, s7
; GFX10-32-NEXT:    s_ashr_i32 s7, s6, 31
; GFX10-32-NEXT:    ; implicit-def: $vgpr4_vgpr5
; GFX10-32-NEXT:    s_lshl_b64 s[6:7], s[6:7], 5
; GFX10-32-NEXT:    s_add_u32 s6, s0, s6
; GFX10-32-NEXT:    s_addc_u32 s7, s1, s7
; GFX10-32-NEXT:    s_ashr_i32 s9, s8, 31
; GFX10-32-NEXT:    s_lshl_b64 s[8:9], s[8:9], 4
; GFX10-32-NEXT:    s_add_u32 s20, s2, s8
; GFX10-32-NEXT:    s_addc_u32 s21, s3, s9
; GFX10-32-NEXT:    s_load_dwordx8 s[8:15], s[6:7], 0x0
; GFX10-32-NEXT:    s_load_dwordx4 s[16:19], s[20:21], 0x0
; GFX10-32-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-32-NEXT:    image_sample v[0:3], v6, s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-32-NEXT:    ; implicit-def: $vgpr6
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s22
; GFX10-32-NEXT:    s_cbranch_execnz .LBB5_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s5
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s4
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_non_uni_img_2_idx:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[4:5], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v5, v1
; GFX10-64-NEXT:    v_mov_b32_e32 v6, v2
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:  .LBB5_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s12, v4
; GFX10-64-NEXT:    v_readfirstlane_b32 s13, v5
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[8:9], s12, v4
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[10:11], s13, v5
; GFX10-64-NEXT:    s_and_b64 s[8:9], s[8:9], s[10:11]
; GFX10-64-NEXT:    s_and_saveexec_b64 s[20:21], s[8:9]
; GFX10-64-NEXT:    s_ashr_i32 s9, s12, 31
; GFX10-64-NEXT:    s_mov_b32 s8, s12
; GFX10-64-NEXT:    ; implicit-def: $vgpr4_vgpr5
; GFX10-64-NEXT:    s_lshl_b64 s[8:9], s[8:9], 5
; GFX10-64-NEXT:    s_add_u32 s22, s0, s8
; GFX10-64-NEXT:    s_addc_u32 s23, s1, s9
; GFX10-64-NEXT:    s_ashr_i32 s9, s13, 31
; GFX10-64-NEXT:    s_mov_b32 s8, s13
; GFX10-64-NEXT:    s_lshl_b64 s[8:9], s[8:9], 4
; GFX10-64-NEXT:    s_add_u32 s24, s2, s8
; GFX10-64-NEXT:    s_addc_u32 s25, s3, s9
; GFX10-64-NEXT:    s_load_dwordx8 s[8:15], s[22:23], 0x0
; GFX10-64-NEXT:    s_load_dwordx4 s[16:19], s[24:25], 0x0
; GFX10-64-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-64-NEXT:    image_sample v[0:3], v6, s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-64-NEXT:    ; implicit-def: $vgpr6
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[20:21]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB5_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[6:7]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[4:5]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
  %t_idx = insertelement <2 x i32> undef, i32 %index1, i32 0
  %combined_idx = insertelement <2 x i32> %t_idx, i32 %index2, i32 1
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.v2i32(i32 0, <2 x i32> %combined_idx)
  %s_c_idx = call <2 x i32> @llvm.amdgcn.waterfall.readfirstlane.v2i32.v2i32(i32 %wf_token, <2 x i32> %combined_idx)
  %s_idx1 = extractelement <2 x i32> %s_c_idx, i32 0
  %s_idx2 = extractelement <2 x i32> %s_c_idx, i32 1
  %ptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx1
  %ptr2 = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %samp_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4) * %ptr, align 32
  %samp = load <4 x i32>, <4 x i32> addrspace(4) * %ptr2, align 32
  %r = call <4 x float> @llvm.amdgcn.image.sample.1d.v4f32.f32(i32 15, float %s, <8 x i32> %rsrc, <4 x i32> %samp, i1 0, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %wf_token, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps void @test_waterfall_non_uniform_img_single_store(<8 x i32> addrspace(4)* inreg %in, i32 %index, i32 %s, <4 x float> %data) #1 {
; VI-LABEL: test_waterfall_non_uniform_img_single_store:
; VI:       ; %bb.0:
; VI-NEXT:    v_mov_b32_e32 v6, v1
; VI-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; VI-NEXT:    v_lshlrev_b64 v[7:8], 5, v[0:1]
; VI-NEXT:    v_mov_b32_e32 v10, s1
; VI-NEXT:    v_mov_b32_e32 v9, s0
; VI-NEXT:    v_add_u32_e32 v7, vcc, v9, v7
; VI-NEXT:    v_addc_u32_e32 v8, vcc, v10, v8, vcc
; VI-NEXT:    v_add_u32_e32 v11, vcc, 16, v7
; VI-NEXT:    v_addc_u32_e32 v12, vcc, 0, v8, vcc
; VI-NEXT:    flat_load_dwordx4 v[7:10], v[7:8]
; VI-NEXT:    flat_load_dwordx4 v[11:14], v[11:12]
; VI-NEXT:    s_mov_b64 s[0:1], exec
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:  .LBB6_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s0, v0
; VI-NEXT:    v_cmp_eq_u32_e64 s[0:1], s0, v0
; VI-NEXT:    s_and_saveexec_b64 s[8:9], s[0:1]
; VI-NEXT:    v_readfirstlane_b32 s0, v7
; VI-NEXT:    v_readfirstlane_b32 s1, v8
; VI-NEXT:    v_readfirstlane_b32 s2, v9
; VI-NEXT:    v_readfirstlane_b32 s3, v10
; VI-NEXT:    v_readfirstlane_b32 s4, v11
; VI-NEXT:    v_readfirstlane_b32 s5, v12
; VI-NEXT:    v_readfirstlane_b32 s6, v13
; VI-NEXT:    v_readfirstlane_b32 s7, v14
; VI-NEXT:    ; implicit-def: $vgpr0
; VI-NEXT:    ; implicit-def: $vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14
; VI-NEXT:    s_nop 4
; VI-NEXT:    image_store v[2:5], v6, s[0:7] dmask:0xf unorm
; VI-NEXT:    ; implicit-def: $vgpr2_vgpr3_vgpr4_vgpr5
; VI-NEXT:    ; implicit-def: $vgpr6
; VI-NEXT:    s_xor_b64 exec, exec, s[8:9]
; VI-NEXT:    s_cbranch_execnz .LBB6_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_endpgm
;
; GFX9-LABEL: test_waterfall_non_uniform_img_single_store:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    v_mov_b32_e32 v6, v1
; GFX9-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; GFX9-NEXT:    v_lshlrev_b64 v[7:8], 5, v[0:1]
; GFX9-NEXT:    v_mov_b32_e32 v10, s1
; GFX9-NEXT:    v_mov_b32_e32 v9, s0
; GFX9-NEXT:    v_add_co_u32_e32 v15, vcc, v9, v7
; GFX9-NEXT:    v_addc_co_u32_e32 v16, vcc, v10, v8, vcc
; GFX9-NEXT:    global_load_dwordx4 v[7:10], v[15:16], off
; GFX9-NEXT:    global_load_dwordx4 v[11:14], v[15:16], off offset:16
; GFX9-NEXT:    s_mov_b64 s[0:1], exec
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:  .LBB6_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s0, v0
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[0:1], s0, v0
; GFX9-NEXT:    s_and_saveexec_b64 s[8:9], s[0:1]
; GFX9-NEXT:    v_readfirstlane_b32 s0, v7
; GFX9-NEXT:    v_readfirstlane_b32 s1, v8
; GFX9-NEXT:    v_readfirstlane_b32 s2, v9
; GFX9-NEXT:    v_readfirstlane_b32 s3, v10
; GFX9-NEXT:    v_readfirstlane_b32 s4, v11
; GFX9-NEXT:    v_readfirstlane_b32 s5, v12
; GFX9-NEXT:    v_readfirstlane_b32 s6, v13
; GFX9-NEXT:    v_readfirstlane_b32 s7, v14
; GFX9-NEXT:    ; implicit-def: $vgpr0
; GFX9-NEXT:    ; implicit-def: $vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14
; GFX9-NEXT:    s_nop 4
; GFX9-NEXT:    image_store v[2:5], v6, s[0:7] dmask:0xf unorm
; GFX9-NEXT:    ; implicit-def: $vgpr2_vgpr3_vgpr4_vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6
; GFX9-NEXT:    s_xor_b64 exec, exec, s[8:9]
; GFX9-NEXT:    s_cbranch_execnz .LBB6_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_endpgm
;
; GFX10-32-LABEL: test_waterfall_non_uniform_img_single_store:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    v_mov_b32_e32 v6, v1
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v10, s1
; GFX10-32-NEXT:    v_mov_b32_e32 v9, s0
; GFX10-32-NEXT:    s_mov_b32 s0, exec_lo
; GFX10-32-NEXT:    v_lshlrev_b64 v[7:8], 5, v[0:1]
; GFX10-32-NEXT:    v_add_co_u32 v15, vcc_lo, v9, v7
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v16, vcc_lo, v10, v8, vcc_lo
; GFX10-32-NEXT:    s_clause 0x1
; GFX10-32-NEXT:    global_load_dwordx4 v[7:10], v[15:16], off
; GFX10-32-NEXT:    global_load_dwordx4 v[11:14], v[15:16], off offset:16
; GFX10-32-NEXT:  .LBB6_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s0, v0
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s0, s0, v0
; GFX10-32-NEXT:    s_and_saveexec_b32 s8, s0
; GFX10-32-NEXT:    s_waitcnt vmcnt(1)
; GFX10-32-NEXT:    v_readfirstlane_b32 s0, v7
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v8
; GFX10-32-NEXT:    v_readfirstlane_b32 s2, v9
; GFX10-32-NEXT:    v_readfirstlane_b32 s3, v10
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_readfirstlane_b32 s4, v11
; GFX10-32-NEXT:    v_readfirstlane_b32 s5, v12
; GFX10-32-NEXT:    v_readfirstlane_b32 s6, v13
; GFX10-32-NEXT:    v_readfirstlane_b32 s7, v14
; GFX10-32-NEXT:    ; implicit-def: $vgpr0
; GFX10-32-NEXT:    ; implicit-def: $vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14
; GFX10-32-NEXT:    image_store v[2:5], v6, s[0:7] dmask:0xf dim:SQ_RSRC_IMG_1D unorm
; GFX10-32-NEXT:    ; implicit-def: $vgpr2_vgpr3_vgpr4_vgpr5
; GFX10-32-NEXT:    ; implicit-def: $vgpr6
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s8
; GFX10-32-NEXT:    s_cbranch_execnz .LBB6_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_endpgm
;
; GFX10-64-LABEL: test_waterfall_non_uniform_img_single_store:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    v_mov_b32_e32 v6, v1
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v10, s1
; GFX10-64-NEXT:    v_mov_b32_e32 v9, s0
; GFX10-64-NEXT:    s_mov_b64 s[0:1], exec
; GFX10-64-NEXT:    v_lshlrev_b64 v[7:8], 5, v[0:1]
; GFX10-64-NEXT:    v_add_co_u32 v15, vcc, v9, v7
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v16, vcc, v10, v8, vcc
; GFX10-64-NEXT:    s_clause 0x1
; GFX10-64-NEXT:    global_load_dwordx4 v[7:10], v[15:16], off
; GFX10-64-NEXT:    global_load_dwordx4 v[11:14], v[15:16], off offset:16
; GFX10-64-NEXT:  .LBB6_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s0, v0
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[0:1], s0, v0
; GFX10-64-NEXT:    s_and_saveexec_b64 s[8:9], s[0:1]
; GFX10-64-NEXT:    s_waitcnt vmcnt(1)
; GFX10-64-NEXT:    v_readfirstlane_b32 s0, v7
; GFX10-64-NEXT:    v_readfirstlane_b32 s1, v8
; GFX10-64-NEXT:    v_readfirstlane_b32 s2, v9
; GFX10-64-NEXT:    v_readfirstlane_b32 s3, v10
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_readfirstlane_b32 s4, v11
; GFX10-64-NEXT:    v_readfirstlane_b32 s5, v12
; GFX10-64-NEXT:    v_readfirstlane_b32 s6, v13
; GFX10-64-NEXT:    v_readfirstlane_b32 s7, v14
; GFX10-64-NEXT:    ; implicit-def: $vgpr0
; GFX10-64-NEXT:    ; implicit-def: $vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14
; GFX10-64-NEXT:    image_store v[2:5], v6, s[0:7] dmask:0xf dim:SQ_RSRC_IMG_1D unorm
; GFX10-64-NEXT:    ; implicit-def: $vgpr2_vgpr3_vgpr4_vgpr5
; GFX10-64-NEXT:    ; implicit-def: $vgpr6
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[8:9]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB6_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_endpgm
  %ptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %index
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4) * %ptr, align 32
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %index)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %wf_token, <8 x i32> %rsrc)
  %s_rsrc_use = call <8 x i32> @llvm.amdgcn.waterfall.last.use.v8i32(i32 %wf_token, <8 x i32> %s_rsrc)
  call void @llvm.amdgcn.image.store.1d.v4f32.i32(<4 x float> %data, i32 15, i32 %s, <8 x i32> %s_rsrc_use, i32 0, i32 0)

  ret void
}

define amdgpu_ps void @test_remove_waterfall_last_use(<8 x i32> addrspace(4)* inreg %in, i32 %index, i32 %s, <4 x float> %data) #1 {
; PRE-GFX10-LABEL: test_remove_waterfall_last_use:
; PRE-GFX10:       ; %bb.0:
; PRE-GFX10-NEXT:    s_load_dwordx8 s[0:7], s[0:1], 0x0
; PRE-GFX10-NEXT:    s_waitcnt lgkmcnt(0)
; PRE-GFX10-NEXT:    image_store v[2:5], v1, s[0:7] dmask:0xf unorm
; PRE-GFX10-NEXT:    s_endpgm
;
; GFX10-32-LABEL: test_remove_waterfall_last_use:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_load_dwordx8 s[0:7], s[0:1], 0x0
; GFX10-32-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-32-NEXT:    image_store v[2:5], v1, s[0:7] dmask:0xf dim:SQ_RSRC_IMG_1D unorm
; GFX10-32-NEXT:    s_endpgm
;
; GFX10-64-LABEL: test_remove_waterfall_last_use:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_load_dwordx8 s[0:7], s[0:1], 0x0
; GFX10-64-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-64-NEXT:    image_store v[2:5], v1, s[0:7] dmask:0xf dim:SQ_RSRC_IMG_1D unorm
; GFX10-64-NEXT:    s_endpgm
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4) * %in, align 32
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %index)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %wf_token, <8 x i32> %rsrc)
  %s_rsrc_use = call <8 x i32> @llvm.amdgcn.waterfall.last.use.v8i32(i32 %wf_token, <8 x i32> %s_rsrc)
  call void @llvm.amdgcn.image.store.1d.v4f32.i32(<4 x float> %data, i32 15, i32 %s, <8 x i32> %s_rsrc_use, i32 0, i32 0)

  ret void
}

define amdgpu_ps <4 x float> @test_remove_waterfall_multi_rl(<8 x i32> addrspace(4)* inreg %in, <4 x i32> addrspace(4)* inreg %samp_in, i32 %index, float %s, i32 inreg %val1, i32 inreg %val2) #1 {
; VI-LABEL: test_remove_waterfall_multi_rl:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[12:13], exec
; VI-NEXT:    s_mov_b32 s6, s5
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    s_ashr_i32 s5, s4, 31
; VI-NEXT:    s_lshl_b64 s[4:5], s[4:5], 5
; VI-NEXT:    s_add_u32 s0, s0, s4
; VI-NEXT:    s_addc_u32 s1, s1, s5
; VI-NEXT:    s_ashr_i32 s7, s6, 31
; VI-NEXT:    s_lshl_b64 s[4:5], s[6:7], 4
; VI-NEXT:    s_add_u32 s8, s2, s4
; VI-NEXT:    s_addc_u32 s9, s3, s5
; VI-NEXT:    s_load_dwordx8 s[0:7], s[0:1], 0x0
; VI-NEXT:    s_load_dwordx4 s[8:11], s[8:9], 0x0
; VI-NEXT:    s_and_b64 exec, exec, s[12:13]
; VI-NEXT:    s_waitcnt lgkmcnt(0)
; VI-NEXT:    image_sample v[0:3], v1, s[0:7], s[8:11] dmask:0xf
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_remove_waterfall_multi_rl:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[12:13], exec
; GFX9-NEXT:    s_mov_b32 s6, s5
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    s_ashr_i32 s5, s4, 31
; GFX9-NEXT:    s_lshl_b64 s[4:5], s[4:5], 5
; GFX9-NEXT:    s_add_u32 s14, s0, s4
; GFX9-NEXT:    s_addc_u32 s15, s1, s5
; GFX9-NEXT:    s_ashr_i32 s7, s6, 31
; GFX9-NEXT:    s_lshl_b64 s[0:1], s[6:7], 4
; GFX9-NEXT:    s_add_u32 s16, s2, s0
; GFX9-NEXT:    s_addc_u32 s17, s3, s1
; GFX9-NEXT:    s_load_dwordx8 s[0:7], s[14:15], 0x0
; GFX9-NEXT:    s_load_dwordx4 s[8:11], s[16:17], 0x0
; GFX9-NEXT:    s_and_b64 exec, exec, s[12:13]
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    image_sample v[0:3], v1, s[0:7], s[8:11] dmask:0xf
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_remove_waterfall_multi_rl:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s16, exec_lo
; GFX10-32-NEXT:    s_mov_b32 s6, s5
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    s_ashr_i32 s5, s4, 31
; GFX10-32-NEXT:    s_lshl_b64 s[4:5], s[4:5], 5
; GFX10-32-NEXT:    s_add_u32 s12, s0, s4
; GFX10-32-NEXT:    s_addc_u32 s13, s1, s5
; GFX10-32-NEXT:    s_ashr_i32 s7, s6, 31
; GFX10-32-NEXT:    s_lshl_b64 s[0:1], s[6:7], 4
; GFX10-32-NEXT:    s_add_u32 s14, s2, s0
; GFX10-32-NEXT:    s_addc_u32 s15, s3, s1
; GFX10-32-NEXT:    s_load_dwordx8 s[0:7], s[12:13], 0x0
; GFX10-32-NEXT:    s_load_dwordx4 s[8:11], s[14:15], 0x0
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s16
; GFX10-32-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-32-NEXT:    image_sample v[0:3], v1, s[0:7], s[8:11] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_remove_waterfall_multi_rl:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[12:13], exec
; GFX10-64-NEXT:    s_mov_b32 s6, s5
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    s_ashr_i32 s5, s4, 31
; GFX10-64-NEXT:    s_lshl_b64 s[4:5], s[4:5], 5
; GFX10-64-NEXT:    s_add_u32 s14, s0, s4
; GFX10-64-NEXT:    s_addc_u32 s15, s1, s5
; GFX10-64-NEXT:    s_ashr_i32 s7, s6, 31
; GFX10-64-NEXT:    s_lshl_b64 s[0:1], s[6:7], 4
; GFX10-64-NEXT:    s_add_u32 s16, s2, s0
; GFX10-64-NEXT:    s_addc_u32 s17, s3, s1
; GFX10-64-NEXT:    s_load_dwordx8 s[0:7], s[14:15], 0x0
; GFX10-64-NEXT:    s_load_dwordx4 s[8:11], s[16:17], 0x0
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[12:13]
; GFX10-64-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-64-NEXT:    image_sample v[0:3], v1, s[0:7], s[8:11] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %index)
  %s_idx = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %val1)
  %s_idx2 = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %val2)
  %ptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %ptr2 = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %samp_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4) * %ptr, align 32
  %samp = load <4 x i32>, <4 x i32> addrspace(4) * %ptr2, align 32
  %r = call <4 x float> @llvm.amdgcn.image.sample.1d.v4f32.f32(i32 15, float %s, <8 x i32> %rsrc, <4 x i32> %samp, i1 0, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %wf_token, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps <4 x float> @test_keep_waterfall_multi_rl(<8 x i32> addrspace(4)* inreg %in, <4 x i32> addrspace(4)* inreg %samp_in, i32 %index, float %s, i32 inreg %val) #1 {
; VI-LABEL: test_keep_waterfall_multi_rl:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_mov_b32_e32 v5, v0
; VI-NEXT:    v_mov_b32_e32 v4, v1
; VI-NEXT:    s_mov_b64 s[8:9], exec
; VI-NEXT:  .LBB9_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s10, v5
; VI-NEXT:    v_cmp_eq_u32_e64 s[12:13], s10, v5
; VI-NEXT:    s_and_saveexec_b64 s[24:25], s[12:13]
; VI-NEXT:    s_ashr_i32 s11, s10, 31
; VI-NEXT:    s_lshl_b64 s[10:11], s[10:11], 5
; VI-NEXT:    s_add_u32 s10, s0, s10
; VI-NEXT:    s_addc_u32 s11, s1, s11
; VI-NEXT:    s_ashr_i32 s5, s4, 31
; VI-NEXT:    s_lshl_b64 s[12:13], s[4:5], 4
; VI-NEXT:    s_add_u32 s20, s2, s12
; VI-NEXT:    s_addc_u32 s21, s3, s13
; VI-NEXT:    s_load_dwordx8 s[12:19], s[10:11], 0x0
; VI-NEXT:    s_load_dwordx4 s[20:23], s[20:21], 0x0
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    s_waitcnt lgkmcnt(0)
; VI-NEXT:    image_sample v[0:3], v4, s[12:19], s[20:23] dmask:0xf
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    s_xor_b64 exec, exec, s[24:25]
; VI-NEXT:    s_cbranch_execnz .LBB9_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[8:9]
; VI-NEXT:    s_and_b64 exec, exec, s[6:7]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_keep_waterfall_multi_rl:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_mov_b32_e32 v5, v0
; GFX9-NEXT:    v_mov_b32_e32 v4, v1
; GFX9-NEXT:    s_mov_b64 s[8:9], exec
; GFX9-NEXT:  .LBB9_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s10, v5
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[12:13], s10, v5
; GFX9-NEXT:    s_and_saveexec_b64 s[24:25], s[12:13]
; GFX9-NEXT:    s_ashr_i32 s11, s10, 31
; GFX9-NEXT:    s_lshl_b64 s[10:11], s[10:11], 5
; GFX9-NEXT:    s_add_u32 s10, s0, s10
; GFX9-NEXT:    s_addc_u32 s11, s1, s11
; GFX9-NEXT:    s_ashr_i32 s5, s4, 31
; GFX9-NEXT:    s_lshl_b64 s[12:13], s[4:5], 4
; GFX9-NEXT:    s_add_u32 s26, s2, s12
; GFX9-NEXT:    s_addc_u32 s27, s3, s13
; GFX9-NEXT:    s_load_dwordx8 s[12:19], s[10:11], 0x0
; GFX9-NEXT:    s_load_dwordx4 s[20:23], s[26:27], 0x0
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    image_sample v[0:3], v4, s[12:19], s[20:23] dmask:0xf
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    s_xor_b64 exec, exec, s[24:25]
; GFX9-NEXT:    s_cbranch_execnz .LBB9_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[8:9]
; GFX9-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_keep_waterfall_multi_rl:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s6, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v5, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v1
; GFX10-32-NEXT:    s_mov_b32 s7, exec_lo
; GFX10-32-NEXT:  .LBB9_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v5
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s5, s8, v5
; GFX10-32-NEXT:    s_and_saveexec_b32 s24, s5
; GFX10-32-NEXT:    s_ashr_i32 s9, s8, 31
; GFX10-32-NEXT:    ; implicit-def: $vgpr5
; GFX10-32-NEXT:    s_lshl_b64 s[8:9], s[8:9], 5
; GFX10-32-NEXT:    s_add_u32 s20, s0, s8
; GFX10-32-NEXT:    s_addc_u32 s21, s1, s9
; GFX10-32-NEXT:    s_ashr_i32 s5, s4, 31
; GFX10-32-NEXT:    s_lshl_b64 s[8:9], s[4:5], 4
; GFX10-32-NEXT:    s_add_u32 s22, s2, s8
; GFX10-32-NEXT:    s_addc_u32 s23, s3, s9
; GFX10-32-NEXT:    s_load_dwordx8 s[8:15], s[20:21], 0x0
; GFX10-32-NEXT:    s_load_dwordx4 s[16:19], s[22:23], 0x0
; GFX10-32-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-32-NEXT:    image_sample v[0:3], v4, s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s24
; GFX10-32-NEXT:    s_cbranch_execnz .LBB9_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s7
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s6
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_keep_waterfall_multi_rl:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v5, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v1
; GFX10-64-NEXT:    s_mov_b64 s[8:9], exec
; GFX10-64-NEXT:  .LBB9_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s10, v5
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[12:13], s10, v5
; GFX10-64-NEXT:    s_and_saveexec_b64 s[24:25], s[12:13]
; GFX10-64-NEXT:    s_ashr_i32 s11, s10, 31
; GFX10-64-NEXT:    ; implicit-def: $vgpr5
; GFX10-64-NEXT:    s_lshl_b64 s[10:11], s[10:11], 5
; GFX10-64-NEXT:    s_add_u32 s10, s0, s10
; GFX10-64-NEXT:    s_addc_u32 s11, s1, s11
; GFX10-64-NEXT:    s_ashr_i32 s5, s4, 31
; GFX10-64-NEXT:    s_lshl_b64 s[12:13], s[4:5], 4
; GFX10-64-NEXT:    s_add_u32 s26, s2, s12
; GFX10-64-NEXT:    s_addc_u32 s27, s3, s13
; GFX10-64-NEXT:    s_load_dwordx8 s[12:19], s[10:11], 0x0
; GFX10-64-NEXT:    s_load_dwordx4 s[20:23], s[26:27], 0x0
; GFX10-64-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-64-NEXT:    image_sample v[0:3], v4, s[12:19], s[20:23] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[24:25]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB9_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[8:9]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %index)
  %s_idx = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %index)
  %s_idx2 = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %val)
  %ptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %ptr2 = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %samp_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4) * %ptr, align 32
  %samp = load <4 x i32>, <4 x i32> addrspace(4) * %ptr2, align 32
  %r = call <4 x float> @llvm.amdgcn.image.sample.1d.v4f32.f32(i32 15, float %s, <8 x i32> %rsrc, <4 x i32> %samp, i1 0, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %wf_token, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps void @test_waterfall_sample_with_kill(<8 x i32> addrspace(4)* inreg %in, <4 x i32> addrspace(4)* inreg %samp_in, i32 %index, float %s, i32 inreg %val) #1 {
; VI-LABEL: test_waterfall_sample_with_kill:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    s_mov_b64 s[8:9], exec
; VI-NEXT:  .LBB10_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s10, v0
; VI-NEXT:    v_cmp_eq_u32_e64 s[12:13], s10, v0
; VI-NEXT:    s_and_saveexec_b64 s[24:25], s[12:13]
; VI-NEXT:    s_ashr_i32 s11, s10, 31
; VI-NEXT:    s_lshl_b64 s[10:11], s[10:11], 5
; VI-NEXT:    s_add_u32 s10, s0, s10
; VI-NEXT:    s_addc_u32 s11, s1, s11
; VI-NEXT:    s_ashr_i32 s5, s4, 31
; VI-NEXT:    s_lshl_b64 s[12:13], s[4:5], 4
; VI-NEXT:    s_add_u32 s20, s2, s12
; VI-NEXT:    s_addc_u32 s21, s3, s13
; VI-NEXT:    s_load_dwordx8 s[12:19], s[10:11], 0x0
; VI-NEXT:    s_load_dwordx4 s[20:23], s[20:21], 0x0
; VI-NEXT:    ; implicit-def: $vgpr0
; VI-NEXT:    s_waitcnt lgkmcnt(0)
; VI-NEXT:    image_sample v[2:5], v1, s[12:19], s[20:23] dmask:0xf
; VI-NEXT:    ; implicit-def: $vgpr1
; VI-NEXT:    s_xor_b64 exec, exec, s[24:25]
; VI-NEXT:    s_cbranch_execnz .LBB10_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[8:9]
; VI-NEXT:    s_and_b64 exec, exec, s[6:7]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_cmp_gt_f32_e32 vcc, 0, v2
; VI-NEXT:    s_and_saveexec_b64 s[0:1], vcc
; VI-NEXT:    s_xor_b64 s[0:1], exec, s[0:1]
; VI-NEXT:    s_cbranch_execz .LBB10_5
; VI-NEXT:  ; %bb.3: ; %.kill
; VI-NEXT:    s_andn2_b64 s[6:7], s[6:7], exec
; VI-NEXT:    s_cbranch_scc0 .LBB10_6
; VI-NEXT:  ; %bb.4: ; %.kill
; VI-NEXT:    s_mov_b64 exec, 0
; VI-NEXT:  .LBB10_5: ; %.exit
; VI-NEXT:    s_or_b64 exec, exec, s[0:1]
; VI-NEXT:    v_mov_b32_e32 v0, 0
; VI-NEXT:    exp mrt0 v0, off, off, off done vm
; VI-NEXT:    s_endpgm
; VI-NEXT:  .LBB10_6:
; VI-NEXT:    s_mov_b64 exec, 0
; VI-NEXT:    exp null off, off, off, off done vm
; VI-NEXT:    s_endpgm
;
; GFX9-LABEL: test_waterfall_sample_with_kill:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    s_mov_b64 s[8:9], exec
; GFX9-NEXT:  .LBB10_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s10, v0
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[12:13], s10, v0
; GFX9-NEXT:    s_and_saveexec_b64 s[24:25], s[12:13]
; GFX9-NEXT:    s_ashr_i32 s11, s10, 31
; GFX9-NEXT:    s_lshl_b64 s[10:11], s[10:11], 5
; GFX9-NEXT:    s_add_u32 s10, s0, s10
; GFX9-NEXT:    s_addc_u32 s11, s1, s11
; GFX9-NEXT:    s_ashr_i32 s5, s4, 31
; GFX9-NEXT:    s_lshl_b64 s[12:13], s[4:5], 4
; GFX9-NEXT:    s_add_u32 s26, s2, s12
; GFX9-NEXT:    s_addc_u32 s27, s3, s13
; GFX9-NEXT:    s_load_dwordx8 s[12:19], s[10:11], 0x0
; GFX9-NEXT:    s_load_dwordx4 s[20:23], s[26:27], 0x0
; GFX9-NEXT:    ; implicit-def: $vgpr0
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    image_sample v[2:5], v1, s[12:19], s[20:23] dmask:0xf
; GFX9-NEXT:    ; implicit-def: $vgpr1
; GFX9-NEXT:    s_xor_b64 exec, exec, s[24:25]
; GFX9-NEXT:    s_cbranch_execnz .LBB10_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[8:9]
; GFX9-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_cmp_gt_f32_e32 vcc, 0, v2
; GFX9-NEXT:    s_and_saveexec_b64 s[0:1], vcc
; GFX9-NEXT:    s_xor_b64 s[0:1], exec, s[0:1]
; GFX9-NEXT:    s_cbranch_execz .LBB10_5
; GFX9-NEXT:  ; %bb.3: ; %.kill
; GFX9-NEXT:    s_andn2_b64 s[6:7], s[6:7], exec
; GFX9-NEXT:    s_cbranch_scc0 .LBB10_6
; GFX9-NEXT:  ; %bb.4: ; %.kill
; GFX9-NEXT:    s_mov_b64 exec, 0
; GFX9-NEXT:  .LBB10_5: ; %.exit
; GFX9-NEXT:    s_or_b64 exec, exec, s[0:1]
; GFX9-NEXT:    v_mov_b32_e32 v0, 0
; GFX9-NEXT:    exp mrt0 v0, off, off, off done vm
; GFX9-NEXT:    s_endpgm
; GFX9-NEXT:  .LBB10_6:
; GFX9-NEXT:    s_mov_b64 exec, 0
; GFX9-NEXT:    exp null off, off, off, off done vm
; GFX9-NEXT:    s_endpgm
;
; GFX10-32-LABEL: test_waterfall_sample_with_kill:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s6, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    s_mov_b32 s7, exec_lo
; GFX10-32-NEXT:  .LBB10_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v0
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s5, s8, v0
; GFX10-32-NEXT:    s_and_saveexec_b32 s24, s5
; GFX10-32-NEXT:    s_ashr_i32 s9, s8, 31
; GFX10-32-NEXT:    ; implicit-def: $vgpr0
; GFX10-32-NEXT:    s_lshl_b64 s[8:9], s[8:9], 5
; GFX10-32-NEXT:    s_add_u32 s20, s0, s8
; GFX10-32-NEXT:    s_addc_u32 s21, s1, s9
; GFX10-32-NEXT:    s_ashr_i32 s5, s4, 31
; GFX10-32-NEXT:    s_lshl_b64 s[8:9], s[4:5], 4
; GFX10-32-NEXT:    s_add_u32 s22, s2, s8
; GFX10-32-NEXT:    s_addc_u32 s23, s3, s9
; GFX10-32-NEXT:    s_load_dwordx8 s[8:15], s[20:21], 0x0
; GFX10-32-NEXT:    s_load_dwordx4 s[16:19], s[22:23], 0x0
; GFX10-32-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-32-NEXT:    image_sample v[2:5], v1, s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-32-NEXT:    ; implicit-def: $vgpr1
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s24
; GFX10-32-NEXT:    s_cbranch_execnz .LBB10_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s7
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s6
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_cmp_gt_f32_e32 vcc_lo, 0, v2
; GFX10-32-NEXT:    s_and_saveexec_b32 s0, vcc_lo
; GFX10-32-NEXT:    s_xor_b32 s0, exec_lo, s0
; GFX10-32-NEXT:    s_cbranch_execz .LBB10_5
; GFX10-32-NEXT:  ; %bb.3: ; %.kill
; GFX10-32-NEXT:    s_andn2_b32 s6, s6, exec_lo
; GFX10-32-NEXT:    s_cbranch_scc0 .LBB10_6
; GFX10-32-NEXT:  ; %bb.4: ; %.kill
; GFX10-32-NEXT:    s_mov_b32 exec_lo, 0
; GFX10-32-NEXT:  .LBB10_5: ; %.exit
; GFX10-32-NEXT:    s_or_b32 exec_lo, exec_lo, s0
; GFX10-32-NEXT:    v_mov_b32_e32 v0, 0
; GFX10-32-NEXT:    exp mrt0 v0, off, off, off done vm
; GFX10-32-NEXT:    s_endpgm
; GFX10-32-NEXT:  .LBB10_6:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, 0
; GFX10-32-NEXT:    exp null off, off, off, off done vm
; GFX10-32-NEXT:    s_endpgm
;
; GFX10-64-LABEL: test_waterfall_sample_with_kill:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    s_mov_b64 s[8:9], exec
; GFX10-64-NEXT:  .LBB10_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s10, v0
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[12:13], s10, v0
; GFX10-64-NEXT:    s_and_saveexec_b64 s[24:25], s[12:13]
; GFX10-64-NEXT:    s_ashr_i32 s11, s10, 31
; GFX10-64-NEXT:    ; implicit-def: $vgpr0
; GFX10-64-NEXT:    s_lshl_b64 s[10:11], s[10:11], 5
; GFX10-64-NEXT:    s_add_u32 s10, s0, s10
; GFX10-64-NEXT:    s_addc_u32 s11, s1, s11
; GFX10-64-NEXT:    s_ashr_i32 s5, s4, 31
; GFX10-64-NEXT:    s_lshl_b64 s[12:13], s[4:5], 4
; GFX10-64-NEXT:    s_add_u32 s26, s2, s12
; GFX10-64-NEXT:    s_addc_u32 s27, s3, s13
; GFX10-64-NEXT:    s_load_dwordx8 s[12:19], s[10:11], 0x0
; GFX10-64-NEXT:    s_load_dwordx4 s[20:23], s[26:27], 0x0
; GFX10-64-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-64-NEXT:    image_sample v[2:5], v1, s[12:19], s[20:23] dmask:0xf dim:SQ_RSRC_IMG_1D
; GFX10-64-NEXT:    ; implicit-def: $vgpr1
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[24:25]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB10_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[8:9]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_cmp_gt_f32_e32 vcc, 0, v2
; GFX10-64-NEXT:    s_and_saveexec_b64 s[0:1], vcc
; GFX10-64-NEXT:    s_xor_b64 s[0:1], exec, s[0:1]
; GFX10-64-NEXT:    s_cbranch_execz .LBB10_5
; GFX10-64-NEXT:  ; %bb.3: ; %.kill
; GFX10-64-NEXT:    s_andn2_b64 s[6:7], s[6:7], exec
; GFX10-64-NEXT:    s_cbranch_scc0 .LBB10_6
; GFX10-64-NEXT:  ; %bb.4: ; %.kill
; GFX10-64-NEXT:    s_mov_b64 exec, 0
; GFX10-64-NEXT:  .LBB10_5: ; %.exit
; GFX10-64-NEXT:    s_or_b64 exec, exec, s[0:1]
; GFX10-64-NEXT:    v_mov_b32_e32 v0, 0
; GFX10-64-NEXT:    exp mrt0 v0, off, off, off done vm
; GFX10-64-NEXT:    s_endpgm
; GFX10-64-NEXT:  .LBB10_6:
; GFX10-64-NEXT:    s_mov_b64 exec, 0
; GFX10-64-NEXT:    exp null off, off, off, off done vm
; GFX10-64-NEXT:    s_endpgm
  %wf_token = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %index)
  %s_idx = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %index)
  %s_idx2 = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %wf_token, i32 %val)
  %ptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %ptr2 = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %samp_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4) * %ptr, align 32
  %samp = load <4 x i32>, <4 x i32> addrspace(4) * %ptr2, align 32
  %r = call <4 x float> @llvm.amdgcn.image.sample.1d.v4f32.f32(i32 15, float %s, <8 x i32> %rsrc, <4 x i32> %samp, i1 0, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %wf_token, <4 x float> %r)
  %r2 = extractelement <4 x float> %r1, i32 0
  %cond = fcmp olt float %r2, 0.000000e+00
  br i1 %cond, label %.kill, label %.exit

.kill:
  call void @llvm.amdgcn.kill(i1 false)
  br label %.exit

.exit:
  call void @llvm.amdgcn.exp.f32(i32 immarg 0, i32 immarg 1, float 0.000000e+00, float undef, float undef, float undef, i1 immarg true, i1 immarg true)
  ret void
}


define amdgpu_ps <4 x float> @test_waterfall_multi_begin(<8 x i32> addrspace(4)* inreg %in, <4 x i32> addrspace(4)* inreg %s_in,
; VI-LABEL: test_waterfall_multi_begin:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[4:5], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_mov_b32_e32 v6, v3
; VI-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; VI-NEXT:    v_mov_b32_e32 v4, v0
; VI-NEXT:    v_mov_b32_e32 v5, v1
; VI-NEXT:    v_lshlrev_b64 v[0:1], 5, v[2:3]
; VI-NEXT:    v_mov_b32_e32 v3, s1
; VI-NEXT:    v_mov_b32_e32 v2, s0
; VI-NEXT:    v_add_u32_e32 v0, vcc, v2, v0
; VI-NEXT:    v_ashrrev_i32_e32 v7, 31, v6
; VI-NEXT:    v_addc_u32_e32 v1, vcc, v3, v1, vcc
; VI-NEXT:    v_lshlrev_b64 v[2:3], 4, v[6:7]
; VI-NEXT:    v_mov_b32_e32 v7, s3
; VI-NEXT:    v_mov_b32_e32 v6, s2
; VI-NEXT:    v_add_u32_e32 v2, vcc, v6, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, v7, v3, vcc
; VI-NEXT:    flat_load_dwordx4 v[6:9], v[0:1]
; VI-NEXT:    v_add_u32_e32 v0, vcc, 16, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:    flat_load_dwordx4 v[10:13], v[0:1]
; VI-NEXT:    flat_load_dwordx4 v[14:17], v[2:3]
; VI-NEXT:    s_mov_b32 s0, 0
; VI-NEXT:    s_mov_b64 s[2:3], exec
; VI-NEXT:  .LBB11_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s1, v4
; VI-NEXT:    v_readfirstlane_b32 s8, v5
; VI-NEXT:    v_cmp_eq_u32_e64 s[6:7], s1, v4
; VI-NEXT:    v_cmp_eq_u32_e64 s[8:9], s8, v5
; VI-NEXT:    s_and_b64 s[6:7], s[6:7], s[8:9]
; VI-NEXT:    s_and_saveexec_b64 s[6:7], s[6:7]
; VI-NEXT:    s_mov_b32 s1, s0
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v0, s0
; VI-NEXT:    s_waitcnt vmcnt(2)
; VI-NEXT:    v_readfirstlane_b32 s8, v6
; VI-NEXT:    v_readfirstlane_b32 s9, v7
; VI-NEXT:    v_readfirstlane_b32 s10, v8
; VI-NEXT:    v_readfirstlane_b32 s11, v9
; VI-NEXT:    s_waitcnt vmcnt(1)
; VI-NEXT:    v_readfirstlane_b32 s12, v10
; VI-NEXT:    v_readfirstlane_b32 s13, v11
; VI-NEXT:    v_readfirstlane_b32 s14, v12
; VI-NEXT:    v_readfirstlane_b32 s15, v13
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_readfirstlane_b32 s16, v14
; VI-NEXT:    v_readfirstlane_b32 s17, v15
; VI-NEXT:    v_readfirstlane_b32 s18, v16
; VI-NEXT:    v_readfirstlane_b32 s19, v17
; VI-NEXT:    v_mov_b32_e32 v1, s1
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    ; implicit-def: $vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13
; VI-NEXT:    ; implicit-def: $vgpr14_vgpr15_vgpr16_vgpr17
; VI-NEXT:    s_nop 3
; VI-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf
; VI-NEXT:    s_xor_b64 exec, exec, s[6:7]
; VI-NEXT:    s_cbranch_execnz .LBB11_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[2:3]
; VI-NEXT:    s_and_b64 exec, exec, s[4:5]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_multi_begin:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[4:5], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_mov_b32_e32 v6, v3
; GFX9-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; GFX9-NEXT:    v_mov_b32_e32 v4, v0
; GFX9-NEXT:    v_mov_b32_e32 v5, v1
; GFX9-NEXT:    v_lshlrev_b64 v[0:1], 5, v[2:3]
; GFX9-NEXT:    v_mov_b32_e32 v3, s1
; GFX9-NEXT:    v_mov_b32_e32 v2, s0
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, v2, v0
; GFX9-NEXT:    v_ashrrev_i32_e32 v7, 31, v6
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, v3, v1, vcc
; GFX9-NEXT:    v_lshlrev_b64 v[2:3], 4, v[6:7]
; GFX9-NEXT:    v_mov_b32_e32 v7, s3
; GFX9-NEXT:    v_mov_b32_e32 v6, s2
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, v6, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, v7, v3, vcc
; GFX9-NEXT:    global_load_dwordx4 v[6:9], v[0:1], off
; GFX9-NEXT:    global_load_dwordx4 v[10:13], v[0:1], off offset:16
; GFX9-NEXT:    global_load_dwordx4 v[14:17], v[2:3], off
; GFX9-NEXT:    s_mov_b32 s0, 0
; GFX9-NEXT:    s_mov_b64 s[2:3], exec
; GFX9-NEXT:  .LBB11_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s1, v4
; GFX9-NEXT:    v_readfirstlane_b32 s8, v5
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[6:7], s1, v4
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[8:9], s8, v5
; GFX9-NEXT:    s_and_b64 s[6:7], s[6:7], s[8:9]
; GFX9-NEXT:    s_and_saveexec_b64 s[6:7], s[6:7]
; GFX9-NEXT:    s_mov_b32 s1, s0
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v0, s0
; GFX9-NEXT:    s_waitcnt vmcnt(2)
; GFX9-NEXT:    v_readfirstlane_b32 s8, v6
; GFX9-NEXT:    v_readfirstlane_b32 s9, v7
; GFX9-NEXT:    v_readfirstlane_b32 s10, v8
; GFX9-NEXT:    v_readfirstlane_b32 s11, v9
; GFX9-NEXT:    s_waitcnt vmcnt(1)
; GFX9-NEXT:    v_readfirstlane_b32 s12, v10
; GFX9-NEXT:    v_readfirstlane_b32 s13, v11
; GFX9-NEXT:    v_readfirstlane_b32 s14, v12
; GFX9-NEXT:    v_readfirstlane_b32 s15, v13
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_readfirstlane_b32 s16, v14
; GFX9-NEXT:    v_readfirstlane_b32 s17, v15
; GFX9-NEXT:    v_readfirstlane_b32 s18, v16
; GFX9-NEXT:    v_readfirstlane_b32 s19, v17
; GFX9-NEXT:    v_mov_b32_e32 v1, s1
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    ; implicit-def: $vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13
; GFX9-NEXT:    ; implicit-def: $vgpr14_vgpr15_vgpr16_vgpr17
; GFX9-NEXT:    s_nop 3
; GFX9-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf
; GFX9-NEXT:    s_xor_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_cbranch_execnz .LBB11_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[2:3]
; GFX9-NEXT:    s_and_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_multi_begin:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s4, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v6, v3
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v5, v1
; GFX10-32-NEXT:    v_mov_b32_e32 v9, s3
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v7, 31, v6
; GFX10-32-NEXT:    v_lshlrev_b64 v[0:1], 5, v[2:3]
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-32-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-32-NEXT:    v_mov_b32_e32 v8, s2
; GFX10-32-NEXT:    v_lshlrev_b64 v[6:7], 4, v[6:7]
; GFX10-32-NEXT:    s_mov_b32 s0, 0
; GFX10-32-NEXT:    s_mov_b32 s2, exec_lo
; GFX10-32-NEXT:    v_add_co_u32 v0, vcc_lo, v2, v0
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v1, vcc_lo, v3, v1, vcc_lo
; GFX10-32-NEXT:    v_add_co_u32 v2, vcc_lo, v8, v6
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v3, vcc_lo, v9, v7, vcc_lo
; GFX10-32-NEXT:    s_clause 0x1
; GFX10-32-NEXT:    global_load_dwordx4 v[6:9], v[0:1], off
; GFX10-32-NEXT:    global_load_dwordx4 v[10:13], v[0:1], off offset:16
; GFX10-32-NEXT:    global_load_dwordx4 v[14:17], v[2:3], off
; GFX10-32-NEXT:  .LBB11_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v4
; GFX10-32-NEXT:    v_readfirstlane_b32 s3, v5
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s1, s1, v4
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s3, s3, v5
; GFX10-32-NEXT:    s_and_b32 s1, s1, s3
; GFX10-32-NEXT:    s_and_saveexec_b32 s3, s1
; GFX10-32-NEXT:    s_mov_b32 s1, s0
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_mov_b32_e32 v0, s0
; GFX10-32-NEXT:    s_waitcnt vmcnt(2)
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v6
; GFX10-32-NEXT:    v_readfirstlane_b32 s9, v7
; GFX10-32-NEXT:    v_readfirstlane_b32 s10, v8
; GFX10-32-NEXT:    v_readfirstlane_b32 s11, v9
; GFX10-32-NEXT:    s_waitcnt vmcnt(1)
; GFX10-32-NEXT:    v_readfirstlane_b32 s12, v10
; GFX10-32-NEXT:    v_readfirstlane_b32 s13, v11
; GFX10-32-NEXT:    v_readfirstlane_b32 s14, v12
; GFX10-32-NEXT:    v_readfirstlane_b32 s15, v13
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_readfirstlane_b32 s16, v14
; GFX10-32-NEXT:    v_readfirstlane_b32 s17, v15
; GFX10-32-NEXT:    v_readfirstlane_b32 s18, v16
; GFX10-32-NEXT:    v_readfirstlane_b32 s19, v17
; GFX10-32-NEXT:    v_mov_b32_e32 v1, s1
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    ; implicit-def: $vgpr5
; GFX10-32-NEXT:    ; implicit-def: $vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13
; GFX10-32-NEXT:    ; implicit-def: $vgpr14_vgpr15_vgpr16_vgpr17
; GFX10-32-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s3
; GFX10-32-NEXT:    s_cbranch_execnz .LBB11_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s2
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s4
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_multi_begin:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[4:5], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v6, v3
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v5, v1
; GFX10-64-NEXT:    v_mov_b32_e32 v9, s3
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v7, 31, v6
; GFX10-64-NEXT:    v_lshlrev_b64 v[0:1], 5, v[2:3]
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-64-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-64-NEXT:    v_mov_b32_e32 v8, s2
; GFX10-64-NEXT:    v_lshlrev_b64 v[6:7], 4, v[6:7]
; GFX10-64-NEXT:    s_mov_b32 s0, 0
; GFX10-64-NEXT:    s_mov_b64 s[2:3], exec
; GFX10-64-NEXT:    v_add_co_u32 v0, vcc, v2, v0
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v1, vcc, v3, v1, vcc
; GFX10-64-NEXT:    v_add_co_u32 v2, vcc, v8, v6
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v3, vcc, v9, v7, vcc
; GFX10-64-NEXT:    s_clause 0x1
; GFX10-64-NEXT:    global_load_dwordx4 v[6:9], v[0:1], off
; GFX10-64-NEXT:    global_load_dwordx4 v[10:13], v[0:1], off offset:16
; GFX10-64-NEXT:    global_load_dwordx4 v[14:17], v[2:3], off
; GFX10-64-NEXT:  .LBB11_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s1, v4
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v5
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[6:7], s1, v4
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[8:9], s8, v5
; GFX10-64-NEXT:    s_and_b64 s[6:7], s[6:7], s[8:9]
; GFX10-64-NEXT:    s_and_saveexec_b64 s[6:7], s[6:7]
; GFX10-64-NEXT:    s_mov_b32 s1, s0
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_mov_b32_e32 v0, s0
; GFX10-64-NEXT:    s_waitcnt vmcnt(2)
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v6
; GFX10-64-NEXT:    v_readfirstlane_b32 s9, v7
; GFX10-64-NEXT:    v_readfirstlane_b32 s10, v8
; GFX10-64-NEXT:    v_readfirstlane_b32 s11, v9
; GFX10-64-NEXT:    s_waitcnt vmcnt(1)
; GFX10-64-NEXT:    v_readfirstlane_b32 s12, v10
; GFX10-64-NEXT:    v_readfirstlane_b32 s13, v11
; GFX10-64-NEXT:    v_readfirstlane_b32 s14, v12
; GFX10-64-NEXT:    v_readfirstlane_b32 s15, v13
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v14
; GFX10-64-NEXT:    v_readfirstlane_b32 s17, v15
; GFX10-64-NEXT:    v_readfirstlane_b32 s18, v16
; GFX10-64-NEXT:    v_readfirstlane_b32 s19, v17
; GFX10-64-NEXT:    v_mov_b32_e32 v1, s1
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    ; implicit-def: $vgpr5
; GFX10-64-NEXT:    ; implicit-def: $vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13
; GFX10-64-NEXT:    ; implicit-def: $vgpr14_vgpr15_vgpr16_vgpr17
; GFX10-64-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB11_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[2:3]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[4:5]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
                                                         i32 %idx1, i32 %idx2, i32 %s_idx, i32 %s_idx2) #1 {
  %rptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %sptr = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %s_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4)* %rptr, align 16
  %srsrc = load <4 x i32>, <4 x i32> addrspace(4)* %sptr, align 16
  %tok = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %idx1)
  %tok1 = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 %tok, i32 %idx2)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %tok1, <8 x i32> %rsrc)
  %s_srsrc = call <4 x i32> @llvm.amdgcn.waterfall.readfirstlane.v4i32.v4i32(i32 %tok1, <4 x i32> %srsrc)
  %r = call <4 x float> @llvm.amdgcn.image.sample.2d.v4f32.f32(i32 15, float 0.000000e+00, float 0.000000e+00, <8 x i32> %s_rsrc, <4 x i32> %s_srsrc, i1 false, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %tok1, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps <4 x float> @test_waterfall_full_idx_multi_begin(<8 x i32> addrspace(4)* inreg %in, <4 x i32> addrspace(4)* inreg %s_in,
; VI-LABEL: test_waterfall_full_idx_multi_begin:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[8:9], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_mov_b32_e32 v2, v1
; VI-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; VI-NEXT:    v_lshlrev_b64 v[0:1], 5, v[0:1]
; VI-NEXT:    v_mov_b32_e32 v4, s1
; VI-NEXT:    v_mov_b32_e32 v3, s0
; VI-NEXT:    v_add_u32_e32 v0, vcc, v3, v0
; VI-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; VI-NEXT:    v_addc_u32_e32 v1, vcc, v4, v1, vcc
; VI-NEXT:    v_lshlrev_b64 v[2:3], 4, v[2:3]
; VI-NEXT:    v_mov_b32_e32 v5, s3
; VI-NEXT:    v_mov_b32_e32 v4, s2
; VI-NEXT:    v_add_u32_e32 v2, vcc, v4, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, v5, v3, vcc
; VI-NEXT:    flat_load_dwordx4 v[4:7], v[0:1]
; VI-NEXT:    v_add_u32_e32 v0, vcc, 16, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:    flat_load_dwordx4 v[8:11], v[0:1]
; VI-NEXT:    flat_load_dwordx4 v[12:15], v[2:3]
; VI-NEXT:    s_mov_b32 s10, 0
; VI-NEXT:    s_mov_b64 s[12:13], exec
; VI-NEXT:  .LBB12_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    s_waitcnt vmcnt(2)
; VI-NEXT:    v_readfirstlane_b32 s0, v4
; VI-NEXT:    v_readfirstlane_b32 s1, v5
; VI-NEXT:    v_readfirstlane_b32 s2, v6
; VI-NEXT:    v_cmp_eq_u32_e64 s[14:15], s0, v4
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s1, v5
; VI-NEXT:    v_readfirstlane_b32 s3, v7
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s2, v6
; VI-NEXT:    s_waitcnt vmcnt(1)
; VI-NEXT:    v_readfirstlane_b32 s4, v8
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s3, v7
; VI-NEXT:    v_readfirstlane_b32 s5, v9
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s4, v8
; VI-NEXT:    v_readfirstlane_b32 s6, v10
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s5, v9
; VI-NEXT:    v_readfirstlane_b32 s7, v11
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s6, v10
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_readfirstlane_b32 s16, v12
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s7, v11
; VI-NEXT:    v_readfirstlane_b32 s17, v13
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s16, v12
; VI-NEXT:    v_readfirstlane_b32 s18, v14
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s17, v13
; VI-NEXT:    v_readfirstlane_b32 s19, v15
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s18, v14
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    v_cmp_eq_u32_e64 s[20:21], s19, v15
; VI-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; VI-NEXT:    s_and_saveexec_b64 s[14:15], s[14:15]
; VI-NEXT:    s_mov_b32 s11, s10
; VI-NEXT:    v_mov_b32_e32 v0, s10
; VI-NEXT:    v_mov_b32_e32 v1, s11
; VI-NEXT:    image_sample v[0:3], v[0:1], s[0:7], s[16:19] dmask:0xf
; VI-NEXT:    ; implicit-def: $vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
; VI-NEXT:    ; implicit-def: $vgpr12_vgpr13_vgpr14_vgpr15
; VI-NEXT:    s_xor_b64 exec, exec, s[14:15]
; VI-NEXT:    s_cbranch_execnz .LBB12_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[12:13]
; VI-NEXT:    s_and_b64 exec, exec, s[8:9]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_full_idx_multi_begin:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[8:9], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_mov_b32_e32 v2, v1
; GFX9-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; GFX9-NEXT:    v_lshlrev_b64 v[0:1], 5, v[0:1]
; GFX9-NEXT:    v_mov_b32_e32 v4, s1
; GFX9-NEXT:    v_mov_b32_e32 v3, s0
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, v3, v0
; GFX9-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, v4, v1, vcc
; GFX9-NEXT:    v_lshlrev_b64 v[2:3], 4, v[2:3]
; GFX9-NEXT:    v_mov_b32_e32 v5, s3
; GFX9-NEXT:    v_mov_b32_e32 v4, s2
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, v4, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, v5, v3, vcc
; GFX9-NEXT:    global_load_dwordx4 v[4:7], v[0:1], off
; GFX9-NEXT:    global_load_dwordx4 v[8:11], v[0:1], off offset:16
; GFX9-NEXT:    global_load_dwordx4 v[12:15], v[2:3], off
; GFX9-NEXT:    s_mov_b32 s10, 0
; GFX9-NEXT:    s_mov_b64 s[12:13], exec
; GFX9-NEXT:  .LBB12_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    s_waitcnt vmcnt(2)
; GFX9-NEXT:    v_readfirstlane_b32 s0, v4
; GFX9-NEXT:    v_readfirstlane_b32 s1, v5
; GFX9-NEXT:    v_readfirstlane_b32 s2, v6
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[14:15], s0, v4
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s1, v5
; GFX9-NEXT:    v_readfirstlane_b32 s3, v7
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s2, v6
; GFX9-NEXT:    s_waitcnt vmcnt(1)
; GFX9-NEXT:    v_readfirstlane_b32 s4, v8
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s3, v7
; GFX9-NEXT:    v_readfirstlane_b32 s5, v9
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s4, v8
; GFX9-NEXT:    v_readfirstlane_b32 s6, v10
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s5, v9
; GFX9-NEXT:    v_readfirstlane_b32 s7, v11
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s6, v10
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_readfirstlane_b32 s16, v12
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s7, v11
; GFX9-NEXT:    v_readfirstlane_b32 s17, v13
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s16, v12
; GFX9-NEXT:    v_readfirstlane_b32 s18, v14
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s17, v13
; GFX9-NEXT:    v_readfirstlane_b32 s19, v15
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s18, v14
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[20:21], s19, v15
; GFX9-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX9-NEXT:    s_and_saveexec_b64 s[14:15], s[14:15]
; GFX9-NEXT:    s_mov_b32 s11, s10
; GFX9-NEXT:    v_mov_b32_e32 v0, s10
; GFX9-NEXT:    v_mov_b32_e32 v1, s11
; GFX9-NEXT:    image_sample v[0:3], v[0:1], s[0:7], s[16:19] dmask:0xf
; GFX9-NEXT:    ; implicit-def: $vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
; GFX9-NEXT:    ; implicit-def: $vgpr12_vgpr13_vgpr14_vgpr15
; GFX9-NEXT:    s_xor_b64 exec, exec, s[14:15]
; GFX9-NEXT:    s_cbranch_execnz .LBB12_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[12:13]
; GFX9-NEXT:    s_and_b64 exec, exec, s[8:9]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_full_idx_multi_begin:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s10, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v2, v1
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v5, s1
; GFX10-32-NEXT:    v_mov_b32_e32 v4, s0
; GFX10-32-NEXT:    v_mov_b32_e32 v7, s3
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; GFX10-32-NEXT:    v_lshlrev_b64 v[0:1], 5, v[0:1]
; GFX10-32-NEXT:    v_mov_b32_e32 v6, s2
; GFX10-32-NEXT:    s_mov_b32 s8, 0
; GFX10-32-NEXT:    s_mov_b32 s11, exec_lo
; GFX10-32-NEXT:    v_lshlrev_b64 v[2:3], 4, v[2:3]
; GFX10-32-NEXT:    v_add_co_u32 v0, vcc_lo, v4, v0
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v1, vcc_lo, v5, v1, vcc_lo
; GFX10-32-NEXT:    v_add_co_u32 v2, vcc_lo, v6, v2
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v3, vcc_lo, v7, v3, vcc_lo
; GFX10-32-NEXT:    s_clause 0x1
; GFX10-32-NEXT:    global_load_dwordx4 v[4:7], v[0:1], off
; GFX10-32-NEXT:    global_load_dwordx4 v[8:11], v[0:1], off offset:16
; GFX10-32-NEXT:    global_load_dwordx4 v[12:15], v[2:3], off
; GFX10-32-NEXT:  .LBB12_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    s_waitcnt vmcnt(2)
; GFX10-32-NEXT:    v_readfirstlane_b32 s0, v4
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v5
; GFX10-32-NEXT:    v_readfirstlane_b32 s2, v6
; GFX10-32-NEXT:    v_readfirstlane_b32 s3, v7
; GFX10-32-NEXT:    s_waitcnt vmcnt(1)
; GFX10-32-NEXT:    v_readfirstlane_b32 s4, v8
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s9, s0, v4
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s16, s1, v5
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s17, s2, v6
; GFX10-32-NEXT:    v_readfirstlane_b32 s5, v9
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s18, s3, v7
; GFX10-32-NEXT:    v_readfirstlane_b32 s6, v10
; GFX10-32-NEXT:    s_and_b32 s9, s9, s16
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s16, s4, v8
; GFX10-32-NEXT:    v_readfirstlane_b32 s7, v11
; GFX10-32-NEXT:    s_and_b32 s9, s9, s17
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s17, s5, v9
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_readfirstlane_b32 s12, v12
; GFX10-32-NEXT:    s_and_b32 s9, s9, s18
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s18, s6, v10
; GFX10-32-NEXT:    v_readfirstlane_b32 s13, v13
; GFX10-32-NEXT:    s_and_b32 s9, s9, s16
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s16, s7, v11
; GFX10-32-NEXT:    v_readfirstlane_b32 s14, v14
; GFX10-32-NEXT:    s_and_b32 s9, s9, s17
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s17, s12, v12
; GFX10-32-NEXT:    v_readfirstlane_b32 s15, v15
; GFX10-32-NEXT:    s_and_b32 s9, s9, s18
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s18, s13, v13
; GFX10-32-NEXT:    s_and_b32 s9, s9, s16
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s16, s14, v14
; GFX10-32-NEXT:    s_and_b32 s9, s9, s17
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s17, s15, v15
; GFX10-32-NEXT:    s_and_b32 s9, s9, s18
; GFX10-32-NEXT:    s_and_b32 s9, s9, s16
; GFX10-32-NEXT:    s_and_b32 s9, s9, s17
; GFX10-32-NEXT:    s_and_saveexec_b32 s16, s9
; GFX10-32-NEXT:    s_mov_b32 s9, s8
; GFX10-32-NEXT:    v_mov_b32_e32 v0, s8
; GFX10-32-NEXT:    v_mov_b32_e32 v1, s9
; GFX10-32-NEXT:    ; implicit-def: $vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
; GFX10-32-NEXT:    ; implicit-def: $vgpr12_vgpr13_vgpr14_vgpr15
; GFX10-32-NEXT:    image_sample v[0:3], v[0:1], s[0:7], s[12:15] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s16
; GFX10-32-NEXT:    s_cbranch_execnz .LBB12_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s11
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s10
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_full_idx_multi_begin:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[8:9], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v2, v1
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v1, 31, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v5, s1
; GFX10-64-NEXT:    v_mov_b32_e32 v4, s0
; GFX10-64-NEXT:    v_mov_b32_e32 v7, s3
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; GFX10-64-NEXT:    v_lshlrev_b64 v[0:1], 5, v[0:1]
; GFX10-64-NEXT:    v_mov_b32_e32 v6, s2
; GFX10-64-NEXT:    s_mov_b32 s10, 0
; GFX10-64-NEXT:    s_mov_b64 s[12:13], exec
; GFX10-64-NEXT:    v_lshlrev_b64 v[2:3], 4, v[2:3]
; GFX10-64-NEXT:    v_add_co_u32 v0, vcc, v4, v0
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v1, vcc, v5, v1, vcc
; GFX10-64-NEXT:    v_add_co_u32 v2, vcc, v6, v2
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v3, vcc, v7, v3, vcc
; GFX10-64-NEXT:    s_clause 0x1
; GFX10-64-NEXT:    global_load_dwordx4 v[4:7], v[0:1], off
; GFX10-64-NEXT:    global_load_dwordx4 v[8:11], v[0:1], off offset:16
; GFX10-64-NEXT:    global_load_dwordx4 v[12:15], v[2:3], off
; GFX10-64-NEXT:  .LBB12_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    s_waitcnt vmcnt(2)
; GFX10-64-NEXT:    v_readfirstlane_b32 s0, v4
; GFX10-64-NEXT:    v_readfirstlane_b32 s1, v5
; GFX10-64-NEXT:    v_readfirstlane_b32 s2, v6
; GFX10-64-NEXT:    v_readfirstlane_b32 s3, v7
; GFX10-64-NEXT:    s_waitcnt vmcnt(1)
; GFX10-64-NEXT:    v_readfirstlane_b32 s4, v8
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[14:15], s0, v4
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[20:21], s1, v5
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[22:23], s2, v6
; GFX10-64-NEXT:    v_readfirstlane_b32 s5, v9
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[24:25], s3, v7
; GFX10-64-NEXT:    v_readfirstlane_b32 s6, v10
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[20:21], s4, v8
; GFX10-64-NEXT:    v_readfirstlane_b32 s7, v11
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[22:23]
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[22:23], s5, v9
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v12
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[24:25]
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[24:25], s6, v10
; GFX10-64-NEXT:    v_readfirstlane_b32 s17, v13
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[20:21], s7, v11
; GFX10-64-NEXT:    v_readfirstlane_b32 s18, v14
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[22:23]
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[22:23], s16, v12
; GFX10-64-NEXT:    v_readfirstlane_b32 s19, v15
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[24:25]
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[24:25], s17, v13
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[20:21], s18, v14
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[22:23]
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[22:23], s19, v15
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[24:25]
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[20:21]
; GFX10-64-NEXT:    s_and_b64 s[14:15], s[14:15], s[22:23]
; GFX10-64-NEXT:    s_and_saveexec_b64 s[14:15], s[14:15]
; GFX10-64-NEXT:    s_mov_b32 s11, s10
; GFX10-64-NEXT:    v_mov_b32_e32 v0, s10
; GFX10-64-NEXT:    v_mov_b32_e32 v1, s11
; GFX10-64-NEXT:    ; implicit-def: $vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11
; GFX10-64-NEXT:    ; implicit-def: $vgpr12_vgpr13_vgpr14_vgpr15
; GFX10-64-NEXT:    image_sample v[0:3], v[0:1], s[0:7], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[14:15]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB12_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[12:13]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[8:9]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
                                                                  i32 %s_idx, i32 %s_idx2) #1 {
  %rptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %sptr = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %s_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4)* %rptr, align 16
  %srsrc = load <4 x i32>, <4 x i32> addrspace(4)* %sptr, align 16
  %tok = call i32 @llvm.amdgcn.waterfall.begin.v8i32(i32 0, <8 x i32> %rsrc)
  %tok1 = call i32 @llvm.amdgcn.waterfall.begin.v4i32(i32 %tok, <4 x i32> %srsrc)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %tok1, <8 x i32> %rsrc)
  %s_srsrc = call <4 x i32> @llvm.amdgcn.waterfall.readfirstlane.v4i32.v4i32(i32 %tok1, <4 x i32> %srsrc)
  %r = call <4 x float> @llvm.amdgcn.image.sample.2d.v4f32.f32(i32 15, float 0.000000e+00, float 0.000000e+00, <8 x i32> %s_rsrc, <4 x i32> %s_srsrc, i1 false, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %tok1, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps <4 x float> @test_waterfall_multi_begin_uniform_idx_1(<8 x i32> addrspace(4)* inreg %in,
; VI-LABEL: test_waterfall_multi_begin_uniform_idx_1:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; VI-NEXT:    v_mov_b32_e32 v4, v0
; VI-NEXT:    v_lshlrev_b64 v[0:1], 4, v[1:2]
; VI-NEXT:    v_mov_b32_e32 v2, s2
; VI-NEXT:    v_mov_b32_e32 v3, s3
; VI-NEXT:    v_add_u32_e32 v0, vcc, v2, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, v3, v1, vcc
; VI-NEXT:    flat_load_dwordx4 v[5:8], v[0:1]
; VI-NEXT:    s_mov_b32 s8, s5
; VI-NEXT:    s_ashr_i32 s9, s5, 31
; VI-NEXT:    s_lshl_b64 s[2:3], s[8:9], 5
; VI-NEXT:    s_add_u32 s0, s0, s2
; VI-NEXT:    s_addc_u32 s1, s1, s3
; VI-NEXT:    s_load_dwordx8 s[8:15], s[0:1], 0x0
; VI-NEXT:    s_mov_b32 s0, 0
; VI-NEXT:    v_mov_b32_e32 v9, s4
; VI-NEXT:    s_mov_b64 s[2:3], exec
; VI-NEXT:  .LBB13_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s1, v9
; VI-NEXT:    v_readfirstlane_b32 s16, v4
; VI-NEXT:    v_cmp_eq_u32_e64 s[4:5], s1, v9
; VI-NEXT:    v_cmp_eq_u32_e64 s[16:17], s16, v4
; VI-NEXT:    s_and_b64 s[4:5], s[4:5], s[16:17]
; VI-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_mov_b32 s1, s0
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v0, s0
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_readfirstlane_b32 s16, v5
; VI-NEXT:    v_readfirstlane_b32 s17, v6
; VI-NEXT:    v_readfirstlane_b32 s18, v7
; VI-NEXT:    v_readfirstlane_b32 s19, v8
; VI-NEXT:    v_mov_b32_e32 v1, s1
; VI-NEXT:    ; implicit-def: $vgpr9
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8
; VI-NEXT:    s_waitcnt lgkmcnt(0)
; VI-NEXT:    s_nop 2
; VI-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf
; VI-NEXT:    s_xor_b64 exec, exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB13_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[2:3]
; VI-NEXT:    s_and_b64 exec, exec, s[6:7]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_multi_begin_uniform_idx_1:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX9-NEXT:    v_mov_b32_e32 v4, v0
; GFX9-NEXT:    v_lshlrev_b64 v[0:1], 4, v[1:2]
; GFX9-NEXT:    v_mov_b32_e32 v2, s2
; GFX9-NEXT:    v_mov_b32_e32 v3, s3
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, v2, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, v3, v1, vcc
; GFX9-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX9-NEXT:    s_mov_b32 s8, s5
; GFX9-NEXT:    s_ashr_i32 s9, s5, 31
; GFX9-NEXT:    s_lshl_b64 s[2:3], s[8:9], 5
; GFX9-NEXT:    s_add_u32 s0, s0, s2
; GFX9-NEXT:    s_addc_u32 s1, s1, s3
; GFX9-NEXT:    s_load_dwordx8 s[8:15], s[0:1], 0x0
; GFX9-NEXT:    s_mov_b32 s0, 0
; GFX9-NEXT:    v_mov_b32_e32 v9, s4
; GFX9-NEXT:    s_mov_b64 s[2:3], exec
; GFX9-NEXT:  .LBB13_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s1, v9
; GFX9-NEXT:    v_readfirstlane_b32 s16, v4
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[4:5], s1, v9
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[16:17], s16, v4
; GFX9-NEXT:    s_and_b64 s[4:5], s[4:5], s[16:17]
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_mov_b32 s1, s0
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v0, s0
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_readfirstlane_b32 s16, v5
; GFX9-NEXT:    v_readfirstlane_b32 s17, v6
; GFX9-NEXT:    v_readfirstlane_b32 s18, v7
; GFX9-NEXT:    v_readfirstlane_b32 s19, v8
; GFX9-NEXT:    v_mov_b32_e32 v1, s1
; GFX9-NEXT:    ; implicit-def: $vgpr9
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    s_nop 2
; GFX9-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf
; GFX9-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB13_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[2:3]
; GFX9-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_multi_begin_uniform_idx_1:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s6, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-32-NEXT:    s_mov_b32 s8, s5
; GFX10-32-NEXT:    s_ashr_i32 s9, s5, 31
; GFX10-32-NEXT:    v_mov_b32_e32 v9, s4
; GFX10-32-NEXT:    v_lshlrev_b64 v[0:1], 4, v[1:2]
; GFX10-32-NEXT:    v_mov_b32_e32 v2, s2
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s3
; GFX10-32-NEXT:    s_lshl_b64 s[2:3], s[8:9], 5
; GFX10-32-NEXT:    s_add_u32 s0, s0, s2
; GFX10-32-NEXT:    v_add_co_u32 v0, vcc_lo, v2, v0
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v1, vcc_lo, v3, v1, vcc_lo
; GFX10-32-NEXT:    s_addc_u32 s1, s1, s3
; GFX10-32-NEXT:    s_mov_b32 s2, exec_lo
; GFX10-32-NEXT:    s_load_dwordx8 s[8:15], s[0:1], 0x0
; GFX10-32-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX10-32-NEXT:    s_mov_b32 s0, 0
; GFX10-32-NEXT:  .LBB13_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v9
; GFX10-32-NEXT:    v_readfirstlane_b32 s3, v4
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s1, s1, v9
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s3, s3, v4
; GFX10-32-NEXT:    s_and_b32 s1, s1, s3
; GFX10-32-NEXT:    s_and_saveexec_b32 s3, s1
; GFX10-32-NEXT:    s_mov_b32 s1, s0
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_mov_b32_e32 v0, s0
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_readfirstlane_b32 s16, v5
; GFX10-32-NEXT:    v_readfirstlane_b32 s17, v6
; GFX10-32-NEXT:    v_readfirstlane_b32 s18, v7
; GFX10-32-NEXT:    v_readfirstlane_b32 s19, v8
; GFX10-32-NEXT:    v_mov_b32_e32 v1, s1
; GFX10-32-NEXT:    ; implicit-def: $vgpr9
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8
; GFX10-32-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-32-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s3
; GFX10-32-NEXT:    s_cbranch_execnz .LBB13_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s2
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s6
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_multi_begin_uniform_idx_1:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-64-NEXT:    s_mov_b32 s8, s5
; GFX10-64-NEXT:    s_ashr_i32 s9, s5, 31
; GFX10-64-NEXT:    v_mov_b32_e32 v9, s4
; GFX10-64-NEXT:    v_lshlrev_b64 v[0:1], 4, v[1:2]
; GFX10-64-NEXT:    v_mov_b32_e32 v2, s2
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s3
; GFX10-64-NEXT:    s_lshl_b64 s[2:3], s[8:9], 5
; GFX10-64-NEXT:    s_add_u32 s0, s0, s2
; GFX10-64-NEXT:    v_add_co_u32 v0, vcc, v2, v0
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v1, vcc, v3, v1, vcc
; GFX10-64-NEXT:    s_addc_u32 s1, s1, s3
; GFX10-64-NEXT:    s_mov_b64 s[2:3], exec
; GFX10-64-NEXT:    s_load_dwordx8 s[8:15], s[0:1], 0x0
; GFX10-64-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX10-64-NEXT:    s_mov_b32 s0, 0
; GFX10-64-NEXT:  .LBB13_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s1, v9
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v4
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[4:5], s1, v9
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[16:17], s16, v4
; GFX10-64-NEXT:    s_and_b64 s[4:5], s[4:5], s[16:17]
; GFX10-64-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX10-64-NEXT:    s_mov_b32 s1, s0
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_mov_b32_e32 v0, s0
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v5
; GFX10-64-NEXT:    v_readfirstlane_b32 s17, v6
; GFX10-64-NEXT:    v_readfirstlane_b32 s18, v7
; GFX10-64-NEXT:    v_readfirstlane_b32 s19, v8
; GFX10-64-NEXT:    v_mov_b32_e32 v1, s1
; GFX10-64-NEXT:    ; implicit-def: $vgpr9
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8
; GFX10-64-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-64-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB13_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[2:3]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
       <4 x i32> addrspace(4)* inreg %s_in, i32 inreg %idx1, i32 %idx2, i32 inreg %s_idx, i32 %s_idx2) #1 {
  %rptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %sptr = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %s_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4)* %rptr, align 16
  %srsrc = load <4 x i32>, <4 x i32> addrspace(4)* %sptr, align 16
  %tok = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %idx1)
  %tok1 = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 %tok, i32 %idx2)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %tok1, <8 x i32> %rsrc)
  %s_srsrc = call <4 x i32> @llvm.amdgcn.waterfall.readfirstlane.v4i32.v4i32(i32 %tok1, <4 x i32> %srsrc)
  %r = call <4 x float> @llvm.amdgcn.image.sample.2d.v4f32.f32(i32 15, float 0.000000e+00, float 0.000000e+00, <8 x i32> %s_rsrc, <4 x i32> %s_srsrc, i1 false, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %tok1, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps <4 x float> @test_waterfall_multi_begin_uniform_idx_2(<8 x i32> addrspace(4)* inreg %in,
; VI-LABEL: test_waterfall_multi_begin_uniform_idx_2:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; VI-NEXT:    v_mov_b32_e32 v4, v0
; VI-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; VI-NEXT:    v_mov_b32_e32 v3, s1
; VI-NEXT:    v_mov_b32_e32 v2, s0
; VI-NEXT:    v_add_u32_e32 v0, vcc, v2, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, v3, v1, vcc
; VI-NEXT:    flat_load_dwordx4 v[5:8], v[0:1]
; VI-NEXT:    v_add_u32_e32 v0, vcc, 16, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:    flat_load_dwordx4 v[9:12], v[0:1]
; VI-NEXT:    s_mov_b32 s8, s5
; VI-NEXT:    s_ashr_i32 s9, s5, 31
; VI-NEXT:    s_lshl_b64 s[0:1], s[8:9], 4
; VI-NEXT:    s_add_u32 s0, s2, s0
; VI-NEXT:    s_addc_u32 s1, s3, s1
; VI-NEXT:    s_load_dwordx4 s[0:3], s[0:1], 0x0
; VI-NEXT:    s_mov_b32 s8, 0
; VI-NEXT:    v_mov_b32_e32 v13, s4
; VI-NEXT:    s_mov_b64 s[4:5], exec
; VI-NEXT:  .LBB14_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s9, v4
; VI-NEXT:    v_readfirstlane_b32 s12, v13
; VI-NEXT:    v_cmp_eq_u32_e64 s[10:11], s9, v4
; VI-NEXT:    v_cmp_eq_u32_e64 s[12:13], s12, v13
; VI-NEXT:    s_and_b64 s[10:11], s[10:11], s[12:13]
; VI-NEXT:    s_and_saveexec_b64 s[10:11], s[10:11]
; VI-NEXT:    s_mov_b32 s9, s8
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v0, s8
; VI-NEXT:    s_waitcnt vmcnt(1)
; VI-NEXT:    v_readfirstlane_b32 s12, v5
; VI-NEXT:    v_readfirstlane_b32 s13, v6
; VI-NEXT:    v_readfirstlane_b32 s14, v7
; VI-NEXT:    v_readfirstlane_b32 s15, v8
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_readfirstlane_b32 s16, v9
; VI-NEXT:    v_readfirstlane_b32 s17, v10
; VI-NEXT:    v_readfirstlane_b32 s18, v11
; VI-NEXT:    v_readfirstlane_b32 s19, v12
; VI-NEXT:    v_mov_b32_e32 v1, s9
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr13
; VI-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; VI-NEXT:    s_waitcnt lgkmcnt(0)
; VI-NEXT:    s_nop 2
; VI-NEXT:    image_sample v[0:3], v[0:1], s[12:19], s[0:3] dmask:0xf
; VI-NEXT:    s_xor_b64 exec, exec, s[10:11]
; VI-NEXT:    s_cbranch_execnz .LBB14_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[4:5]
; VI-NEXT:    s_and_b64 exec, exec, s[6:7]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_multi_begin_uniform_idx_2:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX9-NEXT:    v_mov_b32_e32 v4, v0
; GFX9-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; GFX9-NEXT:    v_mov_b32_e32 v3, s1
; GFX9-NEXT:    v_mov_b32_e32 v2, s0
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, v2, v0
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, v3, v1, vcc
; GFX9-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX9-NEXT:    global_load_dwordx4 v[9:12], v[0:1], off offset:16
; GFX9-NEXT:    s_mov_b32 s8, s5
; GFX9-NEXT:    s_ashr_i32 s9, s5, 31
; GFX9-NEXT:    s_lshl_b64 s[0:1], s[8:9], 4
; GFX9-NEXT:    s_add_u32 s0, s2, s0
; GFX9-NEXT:    s_addc_u32 s1, s3, s1
; GFX9-NEXT:    s_load_dwordx4 s[0:3], s[0:1], 0x0
; GFX9-NEXT:    s_mov_b32 s8, 0
; GFX9-NEXT:    v_mov_b32_e32 v13, s4
; GFX9-NEXT:    s_mov_b64 s[4:5], exec
; GFX9-NEXT:  .LBB14_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s9, v4
; GFX9-NEXT:    v_readfirstlane_b32 s12, v13
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[10:11], s9, v4
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[12:13], s12, v13
; GFX9-NEXT:    s_and_b64 s[10:11], s[10:11], s[12:13]
; GFX9-NEXT:    s_and_saveexec_b64 s[10:11], s[10:11]
; GFX9-NEXT:    s_mov_b32 s9, s8
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v0, s8
; GFX9-NEXT:    s_waitcnt vmcnt(1)
; GFX9-NEXT:    v_readfirstlane_b32 s12, v5
; GFX9-NEXT:    v_readfirstlane_b32 s13, v6
; GFX9-NEXT:    v_readfirstlane_b32 s14, v7
; GFX9-NEXT:    v_readfirstlane_b32 s15, v8
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_readfirstlane_b32 s16, v9
; GFX9-NEXT:    v_readfirstlane_b32 s17, v10
; GFX9-NEXT:    v_readfirstlane_b32 s18, v11
; GFX9-NEXT:    v_readfirstlane_b32 s19, v12
; GFX9-NEXT:    v_mov_b32_e32 v1, s9
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr13
; GFX9-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; GFX9-NEXT:    s_waitcnt lgkmcnt(0)
; GFX9-NEXT:    s_nop 2
; GFX9-NEXT:    image_sample v[0:3], v[0:1], s[12:19], s[0:3] dmask:0xf
; GFX9-NEXT:    s_xor_b64 exec, exec, s[10:11]
; GFX9-NEXT:    s_cbranch_execnz .LBB14_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[4:5]
; GFX9-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_multi_begin_uniform_idx_2:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s6, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-32-NEXT:    s_mov_b32 s8, s5
; GFX10-32-NEXT:    s_ashr_i32 s9, s5, 31
; GFX10-32-NEXT:    v_mov_b32_e32 v13, s4
; GFX10-32-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-32-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-32-NEXT:    s_lshl_b64 s[0:1], s[8:9], 4
; GFX10-32-NEXT:    s_mov_b32 s4, 0
; GFX10-32-NEXT:    s_add_u32 s0, s2, s0
; GFX10-32-NEXT:    s_addc_u32 s1, s3, s1
; GFX10-32-NEXT:    v_add_co_u32 v0, vcc_lo, v2, v0
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v1, vcc_lo, v3, v1, vcc_lo
; GFX10-32-NEXT:    s_mov_b32 s7, exec_lo
; GFX10-32-NEXT:    s_clause 0x1
; GFX10-32-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX10-32-NEXT:    global_load_dwordx4 v[9:12], v[0:1], off offset:16
; GFX10-32-NEXT:    s_load_dwordx4 s[0:3], s[0:1], 0x0
; GFX10-32-NEXT:  .LBB14_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s5, v4
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v13
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s5, s5, v4
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s8, s8, v13
; GFX10-32-NEXT:    s_and_b32 s5, s5, s8
; GFX10-32-NEXT:    s_and_saveexec_b32 s16, s5
; GFX10-32-NEXT:    s_mov_b32 s5, s4
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-32-NEXT:    s_waitcnt vmcnt(1)
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v5
; GFX10-32-NEXT:    v_readfirstlane_b32 s9, v6
; GFX10-32-NEXT:    v_readfirstlane_b32 s10, v7
; GFX10-32-NEXT:    v_readfirstlane_b32 s11, v8
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_readfirstlane_b32 s12, v9
; GFX10-32-NEXT:    v_readfirstlane_b32 s13, v10
; GFX10-32-NEXT:    v_readfirstlane_b32 s14, v11
; GFX10-32-NEXT:    v_readfirstlane_b32 s15, v12
; GFX10-32-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    ; implicit-def: $vgpr13
; GFX10-32-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; GFX10-32-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-32-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[0:3] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s16
; GFX10-32-NEXT:    s_cbranch_execnz .LBB14_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s7
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s6
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_multi_begin_uniform_idx_2:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-64-NEXT:    s_mov_b32 s8, s5
; GFX10-64-NEXT:    s_ashr_i32 s9, s5, 31
; GFX10-64-NEXT:    v_mov_b32_e32 v13, s4
; GFX10-64-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-64-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-64-NEXT:    s_lshl_b64 s[0:1], s[8:9], 4
; GFX10-64-NEXT:    s_mov_b32 s4, 0
; GFX10-64-NEXT:    s_add_u32 s0, s2, s0
; GFX10-64-NEXT:    s_addc_u32 s1, s3, s1
; GFX10-64-NEXT:    v_add_co_u32 v0, vcc, v2, v0
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v1, vcc, v3, v1, vcc
; GFX10-64-NEXT:    s_mov_b64 s[8:9], exec
; GFX10-64-NEXT:    s_clause 0x1
; GFX10-64-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX10-64-NEXT:    global_load_dwordx4 v[9:12], v[0:1], off offset:16
; GFX10-64-NEXT:    s_load_dwordx4 s[0:3], s[0:1], 0x0
; GFX10-64-NEXT:  .LBB14_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s5, v4
; GFX10-64-NEXT:    v_readfirstlane_b32 s12, v13
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[10:11], s5, v4
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[12:13], s12, v13
; GFX10-64-NEXT:    s_and_b64 s[10:11], s[10:11], s[12:13]
; GFX10-64-NEXT:    s_and_saveexec_b64 s[10:11], s[10:11]
; GFX10-64-NEXT:    s_mov_b32 s5, s4
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_mov_b32_e32 v0, s4
; GFX10-64-NEXT:    s_waitcnt vmcnt(1)
; GFX10-64-NEXT:    v_readfirstlane_b32 s12, v5
; GFX10-64-NEXT:    v_readfirstlane_b32 s13, v6
; GFX10-64-NEXT:    v_readfirstlane_b32 s14, v7
; GFX10-64-NEXT:    v_readfirstlane_b32 s15, v8
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v9
; GFX10-64-NEXT:    v_readfirstlane_b32 s17, v10
; GFX10-64-NEXT:    v_readfirstlane_b32 s18, v11
; GFX10-64-NEXT:    v_readfirstlane_b32 s19, v12
; GFX10-64-NEXT:    v_mov_b32_e32 v1, s5
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    ; implicit-def: $vgpr13
; GFX10-64-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; GFX10-64-NEXT:    s_waitcnt lgkmcnt(0)
; GFX10-64-NEXT:    image_sample v[0:3], v[0:1], s[12:19], s[0:3] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[10:11]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB14_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[8:9]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
       <4 x i32> addrspace(4)* inreg %s_in, i32 %idx1, i32 inreg %idx2, i32 %s_idx, i32 inreg %s_idx2) #1 {
  %rptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %sptr = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %s_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4)* %rptr, align 16
  %srsrc = load <4 x i32>, <4 x i32> addrspace(4)* %sptr, align 16
  %tok = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %idx1)
  %tok1 = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 %tok, i32 %idx2)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %tok1, <8 x i32> %rsrc)
  %s_srsrc = call <4 x i32> @llvm.amdgcn.waterfall.readfirstlane.v4i32.v4i32(i32 %tok1, <4 x i32> %srsrc)
  %r = call <4 x float> @llvm.amdgcn.image.sample.2d.v4f32.f32(i32 15, float 0.000000e+00, float 0.000000e+00, <8 x i32> %s_rsrc, <4 x i32> %s_srsrc, i1 false, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %tok1, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps <4 x float> @test_waterfall_multi_begin_uniform_idx_3(<8 x i32> addrspace(4)* inreg %in,
; VI-LABEL: test_waterfall_multi_begin_uniform_idx_3:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_mov_b32_e32 v5, v2
; VI-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; VI-NEXT:    v_mov_b32_e32 v4, v0
; VI-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; VI-NEXT:    v_mov_b32_e32 v3, s1
; VI-NEXT:    v_mov_b32_e32 v2, s0
; VI-NEXT:    v_add_u32_e32 v0, vcc, v2, v0
; VI-NEXT:    v_ashrrev_i32_e32 v6, 31, v5
; VI-NEXT:    v_addc_u32_e32 v1, vcc, v3, v1, vcc
; VI-NEXT:    v_lshlrev_b64 v[2:3], 4, v[5:6]
; VI-NEXT:    v_mov_b32_e32 v6, s3
; VI-NEXT:    v_mov_b32_e32 v5, s2
; VI-NEXT:    v_add_u32_e32 v2, vcc, v5, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, v6, v3, vcc
; VI-NEXT:    flat_load_dwordx4 v[5:8], v[0:1]
; VI-NEXT:    v_add_u32_e32 v0, vcc, 16, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:    flat_load_dwordx4 v[9:12], v[0:1]
; VI-NEXT:    flat_load_dwordx4 v[13:16], v[2:3]
; VI-NEXT:    s_mov_b32 s0, 0
; VI-NEXT:    v_mov_b32_e32 v17, s4
; VI-NEXT:    s_mov_b64 s[2:3], exec
; VI-NEXT:  .LBB15_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s1, v17
; VI-NEXT:    v_readfirstlane_b32 s8, v4
; VI-NEXT:    v_cmp_eq_u32_e64 s[4:5], s1, v17
; VI-NEXT:    v_cmp_eq_u32_e64 s[8:9], s8, v4
; VI-NEXT:    s_and_b64 s[4:5], s[4:5], s[8:9]
; VI-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_mov_b32 s1, s0
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v0, s0
; VI-NEXT:    s_waitcnt vmcnt(2)
; VI-NEXT:    v_readfirstlane_b32 s8, v5
; VI-NEXT:    v_readfirstlane_b32 s9, v6
; VI-NEXT:    v_readfirstlane_b32 s10, v7
; VI-NEXT:    v_readfirstlane_b32 s11, v8
; VI-NEXT:    s_waitcnt vmcnt(1)
; VI-NEXT:    v_readfirstlane_b32 s12, v9
; VI-NEXT:    v_readfirstlane_b32 s13, v10
; VI-NEXT:    v_readfirstlane_b32 s14, v11
; VI-NEXT:    v_readfirstlane_b32 s15, v12
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_readfirstlane_b32 s16, v13
; VI-NEXT:    v_readfirstlane_b32 s17, v14
; VI-NEXT:    v_readfirstlane_b32 s18, v15
; VI-NEXT:    v_readfirstlane_b32 s19, v16
; VI-NEXT:    v_mov_b32_e32 v1, s1
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; VI-NEXT:    ; implicit-def: $vgpr13_vgpr14_vgpr15_vgpr16
; VI-NEXT:    s_nop 3
; VI-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf
; VI-NEXT:    s_xor_b64 exec, exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB15_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[2:3]
; VI-NEXT:    s_and_b64 exec, exec, s[6:7]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_multi_begin_uniform_idx_3:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_mov_b32_e32 v5, v2
; GFX9-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX9-NEXT:    v_mov_b32_e32 v4, v0
; GFX9-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; GFX9-NEXT:    v_mov_b32_e32 v3, s1
; GFX9-NEXT:    v_mov_b32_e32 v2, s0
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, v2, v0
; GFX9-NEXT:    v_ashrrev_i32_e32 v6, 31, v5
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, v3, v1, vcc
; GFX9-NEXT:    v_lshlrev_b64 v[2:3], 4, v[5:6]
; GFX9-NEXT:    v_mov_b32_e32 v6, s3
; GFX9-NEXT:    v_mov_b32_e32 v5, s2
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, v5, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, v6, v3, vcc
; GFX9-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX9-NEXT:    global_load_dwordx4 v[9:12], v[0:1], off offset:16
; GFX9-NEXT:    global_load_dwordx4 v[13:16], v[2:3], off
; GFX9-NEXT:    s_mov_b32 s0, 0
; GFX9-NEXT:    v_mov_b32_e32 v17, s4
; GFX9-NEXT:    s_mov_b64 s[2:3], exec
; GFX9-NEXT:  .LBB15_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s1, v17
; GFX9-NEXT:    v_readfirstlane_b32 s8, v4
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[4:5], s1, v17
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[8:9], s8, v4
; GFX9-NEXT:    s_and_b64 s[4:5], s[4:5], s[8:9]
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_mov_b32 s1, s0
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v0, s0
; GFX9-NEXT:    s_waitcnt vmcnt(2)
; GFX9-NEXT:    v_readfirstlane_b32 s8, v5
; GFX9-NEXT:    v_readfirstlane_b32 s9, v6
; GFX9-NEXT:    v_readfirstlane_b32 s10, v7
; GFX9-NEXT:    v_readfirstlane_b32 s11, v8
; GFX9-NEXT:    s_waitcnt vmcnt(1)
; GFX9-NEXT:    v_readfirstlane_b32 s12, v9
; GFX9-NEXT:    v_readfirstlane_b32 s13, v10
; GFX9-NEXT:    v_readfirstlane_b32 s14, v11
; GFX9-NEXT:    v_readfirstlane_b32 s15, v12
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_readfirstlane_b32 s16, v13
; GFX9-NEXT:    v_readfirstlane_b32 s17, v14
; GFX9-NEXT:    v_readfirstlane_b32 s18, v15
; GFX9-NEXT:    v_readfirstlane_b32 s19, v16
; GFX9-NEXT:    v_mov_b32_e32 v1, s1
; GFX9-NEXT:    ; implicit-def: $vgpr17
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; GFX9-NEXT:    ; implicit-def: $vgpr13_vgpr14_vgpr15_vgpr16
; GFX9-NEXT:    s_nop 3
; GFX9-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf
; GFX9-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB15_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[2:3]
; GFX9-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_multi_begin_uniform_idx_3:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s5, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v5, v2
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v8, s3
; GFX10-32-NEXT:    v_mov_b32_e32 v7, s2
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v6, 31, v5
; GFX10-32-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-32-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-32-NEXT:    v_mov_b32_e32 v17, s4
; GFX10-32-NEXT:    v_lshlrev_b64 v[5:6], 4, v[5:6]
; GFX10-32-NEXT:    s_mov_b32 s0, 0
; GFX10-32-NEXT:    s_mov_b32 s2, exec_lo
; GFX10-32-NEXT:    v_add_co_u32 v0, vcc_lo, v2, v0
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v1, vcc_lo, v3, v1, vcc_lo
; GFX10-32-NEXT:    v_add_co_u32 v2, vcc_lo, v7, v5
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v3, vcc_lo, v8, v6, vcc_lo
; GFX10-32-NEXT:    s_clause 0x1
; GFX10-32-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX10-32-NEXT:    global_load_dwordx4 v[9:12], v[0:1], off offset:16
; GFX10-32-NEXT:    global_load_dwordx4 v[13:16], v[2:3], off
; GFX10-32-NEXT:  .LBB15_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v17
; GFX10-32-NEXT:    v_readfirstlane_b32 s3, v4
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s1, s1, v17
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s3, s3, v4
; GFX10-32-NEXT:    s_and_b32 s1, s1, s3
; GFX10-32-NEXT:    s_and_saveexec_b32 s3, s1
; GFX10-32-NEXT:    s_mov_b32 s1, s0
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_mov_b32_e32 v0, s0
; GFX10-32-NEXT:    s_waitcnt vmcnt(2)
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v5
; GFX10-32-NEXT:    v_readfirstlane_b32 s9, v6
; GFX10-32-NEXT:    v_readfirstlane_b32 s10, v7
; GFX10-32-NEXT:    v_readfirstlane_b32 s11, v8
; GFX10-32-NEXT:    s_waitcnt vmcnt(1)
; GFX10-32-NEXT:    v_readfirstlane_b32 s12, v9
; GFX10-32-NEXT:    v_readfirstlane_b32 s13, v10
; GFX10-32-NEXT:    v_readfirstlane_b32 s14, v11
; GFX10-32-NEXT:    v_readfirstlane_b32 s15, v12
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_readfirstlane_b32 s16, v13
; GFX10-32-NEXT:    v_readfirstlane_b32 s17, v14
; GFX10-32-NEXT:    v_readfirstlane_b32 s18, v15
; GFX10-32-NEXT:    v_readfirstlane_b32 s19, v16
; GFX10-32-NEXT:    v_mov_b32_e32 v1, s1
; GFX10-32-NEXT:    ; implicit-def: $vgpr17
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; GFX10-32-NEXT:    ; implicit-def: $vgpr13_vgpr14_vgpr15_vgpr16
; GFX10-32-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s3
; GFX10-32-NEXT:    s_cbranch_execnz .LBB15_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s2
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s5
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_multi_begin_uniform_idx_3:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v5, v2
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v8, s3
; GFX10-64-NEXT:    v_mov_b32_e32 v7, s2
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v6, 31, v5
; GFX10-64-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-64-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-64-NEXT:    v_mov_b32_e32 v17, s4
; GFX10-64-NEXT:    v_lshlrev_b64 v[5:6], 4, v[5:6]
; GFX10-64-NEXT:    s_mov_b32 s0, 0
; GFX10-64-NEXT:    s_mov_b64 s[2:3], exec
; GFX10-64-NEXT:    v_add_co_u32 v0, vcc, v2, v0
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v1, vcc, v3, v1, vcc
; GFX10-64-NEXT:    v_add_co_u32 v2, vcc, v7, v5
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v3, vcc, v8, v6, vcc
; GFX10-64-NEXT:    s_clause 0x1
; GFX10-64-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX10-64-NEXT:    global_load_dwordx4 v[9:12], v[0:1], off offset:16
; GFX10-64-NEXT:    global_load_dwordx4 v[13:16], v[2:3], off
; GFX10-64-NEXT:  .LBB15_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s1, v17
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v4
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[4:5], s1, v17
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[8:9], s8, v4
; GFX10-64-NEXT:    s_and_b64 s[4:5], s[4:5], s[8:9]
; GFX10-64-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX10-64-NEXT:    s_mov_b32 s1, s0
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_mov_b32_e32 v0, s0
; GFX10-64-NEXT:    s_waitcnt vmcnt(2)
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v5
; GFX10-64-NEXT:    v_readfirstlane_b32 s9, v6
; GFX10-64-NEXT:    v_readfirstlane_b32 s10, v7
; GFX10-64-NEXT:    v_readfirstlane_b32 s11, v8
; GFX10-64-NEXT:    s_waitcnt vmcnt(1)
; GFX10-64-NEXT:    v_readfirstlane_b32 s12, v9
; GFX10-64-NEXT:    v_readfirstlane_b32 s13, v10
; GFX10-64-NEXT:    v_readfirstlane_b32 s14, v11
; GFX10-64-NEXT:    v_readfirstlane_b32 s15, v12
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v13
; GFX10-64-NEXT:    v_readfirstlane_b32 s17, v14
; GFX10-64-NEXT:    v_readfirstlane_b32 s18, v15
; GFX10-64-NEXT:    v_readfirstlane_b32 s19, v16
; GFX10-64-NEXT:    v_mov_b32_e32 v1, s1
; GFX10-64-NEXT:    ; implicit-def: $vgpr17
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; GFX10-64-NEXT:    ; implicit-def: $vgpr13_vgpr14_vgpr15_vgpr16
; GFX10-64-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB15_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[2:3]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
       <4 x i32> addrspace(4)* inreg %s_in, i32 inreg %idx1, i32 %idx2, i32 %s_idx, i32 %s_idx2) #1 {
  %rptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %sptr = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %s_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4)* %rptr, align 16
  %srsrc = load <4 x i32>, <4 x i32> addrspace(4)* %sptr, align 16
  %tok = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %idx1)
  %tok1 = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 %tok, i32 %idx2)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %tok1, <8 x i32> %rsrc)
  %s_srsrc = call <4 x i32> @llvm.amdgcn.waterfall.readfirstlane.v4i32.v4i32(i32 %tok1, <4 x i32> %srsrc)
  %r = call <4 x float> @llvm.amdgcn.image.sample.2d.v4f32.f32(i32 15, float 0.000000e+00, float 0.000000e+00, <8 x i32> %s_rsrc, <4 x i32> %s_srsrc, i1 false, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %tok1, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps <4 x float> @test_waterfall_multi_begin_uniform_idx_4(<8 x i32> addrspace(4)* inreg %in,
; VI-LABEL: test_waterfall_multi_begin_uniform_idx_4:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_mov_b32_e32 v5, v2
; VI-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; VI-NEXT:    v_mov_b32_e32 v4, v0
; VI-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; VI-NEXT:    v_mov_b32_e32 v3, s1
; VI-NEXT:    v_mov_b32_e32 v2, s0
; VI-NEXT:    v_add_u32_e32 v0, vcc, v2, v0
; VI-NEXT:    v_ashrrev_i32_e32 v6, 31, v5
; VI-NEXT:    v_addc_u32_e32 v1, vcc, v3, v1, vcc
; VI-NEXT:    v_lshlrev_b64 v[2:3], 4, v[5:6]
; VI-NEXT:    v_mov_b32_e32 v6, s3
; VI-NEXT:    v_mov_b32_e32 v5, s2
; VI-NEXT:    v_add_u32_e32 v2, vcc, v5, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, v6, v3, vcc
; VI-NEXT:    flat_load_dwordx4 v[5:8], v[0:1]
; VI-NEXT:    v_add_u32_e32 v0, vcc, 16, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:    flat_load_dwordx4 v[9:12], v[0:1]
; VI-NEXT:    flat_load_dwordx4 v[13:16], v[2:3]
; VI-NEXT:    s_mov_b32 s0, 0
; VI-NEXT:    v_mov_b32_e32 v17, s4
; VI-NEXT:    s_mov_b64 s[2:3], exec
; VI-NEXT:  .LBB16_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s1, v4
; VI-NEXT:    v_readfirstlane_b32 s8, v17
; VI-NEXT:    v_cmp_eq_u32_e64 s[4:5], s1, v4
; VI-NEXT:    v_cmp_eq_u32_e64 s[8:9], s8, v17
; VI-NEXT:    s_and_b64 s[4:5], s[4:5], s[8:9]
; VI-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; VI-NEXT:    s_mov_b32 s1, s0
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_mov_b32_e32 v0, s0
; VI-NEXT:    s_waitcnt vmcnt(2)
; VI-NEXT:    v_readfirstlane_b32 s8, v5
; VI-NEXT:    v_readfirstlane_b32 s9, v6
; VI-NEXT:    v_readfirstlane_b32 s10, v7
; VI-NEXT:    v_readfirstlane_b32 s11, v8
; VI-NEXT:    s_waitcnt vmcnt(1)
; VI-NEXT:    v_readfirstlane_b32 s12, v9
; VI-NEXT:    v_readfirstlane_b32 s13, v10
; VI-NEXT:    v_readfirstlane_b32 s14, v11
; VI-NEXT:    v_readfirstlane_b32 s15, v12
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    v_readfirstlane_b32 s16, v13
; VI-NEXT:    v_readfirstlane_b32 s17, v14
; VI-NEXT:    v_readfirstlane_b32 s18, v15
; VI-NEXT:    v_readfirstlane_b32 s19, v16
; VI-NEXT:    v_mov_b32_e32 v1, s1
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr17
; VI-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; VI-NEXT:    ; implicit-def: $vgpr13_vgpr14_vgpr15_vgpr16
; VI-NEXT:    s_nop 3
; VI-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf
; VI-NEXT:    s_xor_b64 exec, exec, s[4:5]
; VI-NEXT:    s_cbranch_execnz .LBB16_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[2:3]
; VI-NEXT:    s_and_b64 exec, exec, s[6:7]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_multi_begin_uniform_idx_4:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_mov_b32_e32 v5, v2
; GFX9-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX9-NEXT:    v_mov_b32_e32 v4, v0
; GFX9-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; GFX9-NEXT:    v_mov_b32_e32 v3, s1
; GFX9-NEXT:    v_mov_b32_e32 v2, s0
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, v2, v0
; GFX9-NEXT:    v_ashrrev_i32_e32 v6, 31, v5
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, v3, v1, vcc
; GFX9-NEXT:    v_lshlrev_b64 v[2:3], 4, v[5:6]
; GFX9-NEXT:    v_mov_b32_e32 v6, s3
; GFX9-NEXT:    v_mov_b32_e32 v5, s2
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, v5, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, v6, v3, vcc
; GFX9-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX9-NEXT:    global_load_dwordx4 v[9:12], v[0:1], off offset:16
; GFX9-NEXT:    global_load_dwordx4 v[13:16], v[2:3], off
; GFX9-NEXT:    s_mov_b32 s0, 0
; GFX9-NEXT:    v_mov_b32_e32 v17, s4
; GFX9-NEXT:    s_mov_b64 s[2:3], exec
; GFX9-NEXT:  .LBB16_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s1, v4
; GFX9-NEXT:    v_readfirstlane_b32 s8, v17
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[4:5], s1, v4
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[8:9], s8, v17
; GFX9-NEXT:    s_and_b64 s[4:5], s[4:5], s[8:9]
; GFX9-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX9-NEXT:    s_mov_b32 s1, s0
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_mov_b32_e32 v0, s0
; GFX9-NEXT:    s_waitcnt vmcnt(2)
; GFX9-NEXT:    v_readfirstlane_b32 s8, v5
; GFX9-NEXT:    v_readfirstlane_b32 s9, v6
; GFX9-NEXT:    v_readfirstlane_b32 s10, v7
; GFX9-NEXT:    v_readfirstlane_b32 s11, v8
; GFX9-NEXT:    s_waitcnt vmcnt(1)
; GFX9-NEXT:    v_readfirstlane_b32 s12, v9
; GFX9-NEXT:    v_readfirstlane_b32 s13, v10
; GFX9-NEXT:    v_readfirstlane_b32 s14, v11
; GFX9-NEXT:    v_readfirstlane_b32 s15, v12
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    v_readfirstlane_b32 s16, v13
; GFX9-NEXT:    v_readfirstlane_b32 s17, v14
; GFX9-NEXT:    v_readfirstlane_b32 s18, v15
; GFX9-NEXT:    v_readfirstlane_b32 s19, v16
; GFX9-NEXT:    v_mov_b32_e32 v1, s1
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr17
; GFX9-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; GFX9-NEXT:    ; implicit-def: $vgpr13_vgpr14_vgpr15_vgpr16
; GFX9-NEXT:    s_nop 3
; GFX9-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf
; GFX9-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX9-NEXT:    s_cbranch_execnz .LBB16_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[2:3]
; GFX9-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_multi_begin_uniform_idx_4:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s5, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v5, v2
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v8, s3
; GFX10-32-NEXT:    v_mov_b32_e32 v7, s2
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v6, 31, v5
; GFX10-32-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-32-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-32-NEXT:    v_mov_b32_e32 v17, s4
; GFX10-32-NEXT:    v_lshlrev_b64 v[5:6], 4, v[5:6]
; GFX10-32-NEXT:    s_mov_b32 s0, 0
; GFX10-32-NEXT:    s_mov_b32 s2, exec_lo
; GFX10-32-NEXT:    v_add_co_u32 v0, vcc_lo, v2, v0
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v1, vcc_lo, v3, v1, vcc_lo
; GFX10-32-NEXT:    v_add_co_u32 v2, vcc_lo, v7, v5
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v3, vcc_lo, v8, v6, vcc_lo
; GFX10-32-NEXT:    s_clause 0x1
; GFX10-32-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX10-32-NEXT:    global_load_dwordx4 v[9:12], v[0:1], off offset:16
; GFX10-32-NEXT:    global_load_dwordx4 v[13:16], v[2:3], off
; GFX10-32-NEXT:  .LBB16_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v4
; GFX10-32-NEXT:    v_readfirstlane_b32 s3, v17
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s1, s1, v4
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s3, s3, v17
; GFX10-32-NEXT:    s_and_b32 s1, s1, s3
; GFX10-32-NEXT:    s_and_saveexec_b32 s3, s1
; GFX10-32-NEXT:    s_mov_b32 s1, s0
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_mov_b32_e32 v0, s0
; GFX10-32-NEXT:    s_waitcnt vmcnt(2)
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v5
; GFX10-32-NEXT:    v_readfirstlane_b32 s9, v6
; GFX10-32-NEXT:    v_readfirstlane_b32 s10, v7
; GFX10-32-NEXT:    v_readfirstlane_b32 s11, v8
; GFX10-32-NEXT:    s_waitcnt vmcnt(1)
; GFX10-32-NEXT:    v_readfirstlane_b32 s12, v9
; GFX10-32-NEXT:    v_readfirstlane_b32 s13, v10
; GFX10-32-NEXT:    v_readfirstlane_b32 s14, v11
; GFX10-32-NEXT:    v_readfirstlane_b32 s15, v12
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    v_readfirstlane_b32 s16, v13
; GFX10-32-NEXT:    v_readfirstlane_b32 s17, v14
; GFX10-32-NEXT:    v_readfirstlane_b32 s18, v15
; GFX10-32-NEXT:    v_readfirstlane_b32 s19, v16
; GFX10-32-NEXT:    v_mov_b32_e32 v1, s1
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    ; implicit-def: $vgpr17
; GFX10-32-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; GFX10-32-NEXT:    ; implicit-def: $vgpr13_vgpr14_vgpr15_vgpr16
; GFX10-32-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s3
; GFX10-32-NEXT:    s_cbranch_execnz .LBB16_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s2
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s5
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_multi_begin_uniform_idx_4:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v5, v2
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v2, 31, v1
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v8, s3
; GFX10-64-NEXT:    v_mov_b32_e32 v7, s2
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v6, 31, v5
; GFX10-64-NEXT:    v_lshlrev_b64 v[0:1], 5, v[1:2]
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-64-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-64-NEXT:    v_mov_b32_e32 v17, s4
; GFX10-64-NEXT:    v_lshlrev_b64 v[5:6], 4, v[5:6]
; GFX10-64-NEXT:    s_mov_b32 s0, 0
; GFX10-64-NEXT:    s_mov_b64 s[2:3], exec
; GFX10-64-NEXT:    v_add_co_u32 v0, vcc, v2, v0
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v1, vcc, v3, v1, vcc
; GFX10-64-NEXT:    v_add_co_u32 v2, vcc, v7, v5
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v3, vcc, v8, v6, vcc
; GFX10-64-NEXT:    s_clause 0x1
; GFX10-64-NEXT:    global_load_dwordx4 v[5:8], v[0:1], off
; GFX10-64-NEXT:    global_load_dwordx4 v[9:12], v[0:1], off offset:16
; GFX10-64-NEXT:    global_load_dwordx4 v[13:16], v[2:3], off
; GFX10-64-NEXT:  .LBB16_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s1, v4
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v17
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[4:5], s1, v4
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[8:9], s8, v17
; GFX10-64-NEXT:    s_and_b64 s[4:5], s[4:5], s[8:9]
; GFX10-64-NEXT:    s_and_saveexec_b64 s[4:5], s[4:5]
; GFX10-64-NEXT:    s_mov_b32 s1, s0
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_mov_b32_e32 v0, s0
; GFX10-64-NEXT:    s_waitcnt vmcnt(2)
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v5
; GFX10-64-NEXT:    v_readfirstlane_b32 s9, v6
; GFX10-64-NEXT:    v_readfirstlane_b32 s10, v7
; GFX10-64-NEXT:    v_readfirstlane_b32 s11, v8
; GFX10-64-NEXT:    s_waitcnt vmcnt(1)
; GFX10-64-NEXT:    v_readfirstlane_b32 s12, v9
; GFX10-64-NEXT:    v_readfirstlane_b32 s13, v10
; GFX10-64-NEXT:    v_readfirstlane_b32 s14, v11
; GFX10-64-NEXT:    v_readfirstlane_b32 s15, v12
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v13
; GFX10-64-NEXT:    v_readfirstlane_b32 s17, v14
; GFX10-64-NEXT:    v_readfirstlane_b32 s18, v15
; GFX10-64-NEXT:    v_readfirstlane_b32 s19, v16
; GFX10-64-NEXT:    v_mov_b32_e32 v1, s1
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    ; implicit-def: $vgpr17
; GFX10-64-NEXT:    ; implicit-def: $vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12
; GFX10-64-NEXT:    ; implicit-def: $vgpr13_vgpr14_vgpr15_vgpr16
; GFX10-64-NEXT:    image_sample v[0:3], v[0:1], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[4:5]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB16_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[2:3]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
       <4 x i32> addrspace(4)* inreg %s_in, i32 %idx1, i32 inreg %idx2, i32 %s_idx, i32 %s_idx2) #1 {
  %rptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %sptr = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %s_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4)* %rptr, align 16
  %srsrc = load <4 x i32>, <4 x i32> addrspace(4)* %sptr, align 16
  %tok = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %idx1)
  %tok1 = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 %tok, i32 %idx2)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %tok1, <8 x i32> %rsrc)
  %s_srsrc = call <4 x i32> @llvm.amdgcn.waterfall.readfirstlane.v4i32.v4i32(i32 %tok1, <4 x i32> %srsrc)
  %r = call <4 x float> @llvm.amdgcn.image.sample.2d.v4f32.f32(i32 15, float 0.000000e+00, float 0.000000e+00, <8 x i32> %s_rsrc, <4 x i32> %s_srsrc, i1 false, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %tok1, <4 x float> %r)

  ret <4 x float> %r1
}

define amdgpu_ps {<4 x float>,<4 x float>} @test_waterfall_multi_begin_uniform_idx_1_2loops(
; VI-LABEL: test_waterfall_multi_begin_uniform_idx_1_2loops:
; VI:       ; %bb.0:
; VI-NEXT:    s_mov_b64 s[6:7], exec
; VI-NEXT:    s_wqm_b64 exec, exec
; VI-NEXT:    v_mov_b32_e32 v6, v3
; VI-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; VI-NEXT:    v_mov_b32_e32 v4, v0
; VI-NEXT:    v_mov_b32_e32 v5, v1
; VI-NEXT:    v_lshlrev_b64 v[0:1], 5, v[2:3]
; VI-NEXT:    v_mov_b32_e32 v3, s1
; VI-NEXT:    v_mov_b32_e32 v2, s0
; VI-NEXT:    v_add_u32_e32 v0, vcc, v2, v0
; VI-NEXT:    v_ashrrev_i32_e32 v7, 31, v6
; VI-NEXT:    v_addc_u32_e32 v1, vcc, v3, v1, vcc
; VI-NEXT:    v_lshlrev_b64 v[2:3], 4, v[6:7]
; VI-NEXT:    v_mov_b32_e32 v7, s3
; VI-NEXT:    v_mov_b32_e32 v6, s2
; VI-NEXT:    v_add_u32_e32 v2, vcc, v6, v2
; VI-NEXT:    v_addc_u32_e32 v3, vcc, v7, v3, vcc
; VI-NEXT:    flat_load_dwordx4 v[8:11], v[0:1]
; VI-NEXT:    v_add_u32_e32 v0, vcc, 16, v0
; VI-NEXT:    v_addc_u32_e32 v1, vcc, 0, v1, vcc
; VI-NEXT:    flat_load_dwordx4 v[12:15], v[0:1]
; VI-NEXT:    flat_load_dwordx4 v[16:19], v[2:3]
; VI-NEXT:    s_mov_b32 s0, 0
; VI-NEXT:    s_mov_b64 s[2:3], exec
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:  .LBB17_1: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s1, v4
; VI-NEXT:    v_readfirstlane_b32 s10, v5
; VI-NEXT:    v_cmp_eq_u32_e64 s[8:9], s1, v4
; VI-NEXT:    v_cmp_eq_u32_e64 s[10:11], s10, v5
; VI-NEXT:    s_and_b64 s[8:9], s[8:9], s[10:11]
; VI-NEXT:    s_and_saveexec_b64 s[20:21], s[8:9]
; VI-NEXT:    s_mov_b32 s1, s0
; VI-NEXT:    v_mov_b32_e32 v21, s1
; VI-NEXT:    v_readfirstlane_b32 s8, v8
; VI-NEXT:    v_readfirstlane_b32 s9, v9
; VI-NEXT:    v_readfirstlane_b32 s10, v10
; VI-NEXT:    v_readfirstlane_b32 s11, v11
; VI-NEXT:    v_readfirstlane_b32 s12, v12
; VI-NEXT:    v_readfirstlane_b32 s13, v13
; VI-NEXT:    v_readfirstlane_b32 s14, v14
; VI-NEXT:    v_readfirstlane_b32 s15, v15
; VI-NEXT:    v_readfirstlane_b32 s16, v16
; VI-NEXT:    v_readfirstlane_b32 s17, v17
; VI-NEXT:    v_readfirstlane_b32 s18, v18
; VI-NEXT:    v_readfirstlane_b32 s19, v19
; VI-NEXT:    v_mov_b32_e32 v20, s0
; VI-NEXT:    ; implicit-def: $vgpr4
; VI-NEXT:    ; implicit-def: $vgpr5
; VI-NEXT:    s_nop 3
; VI-NEXT:    image_sample v[0:3], v[20:21], s[8:15], s[16:19] dmask:0xf
; VI-NEXT:    s_xor_b64 exec, exec, s[20:21]
; VI-NEXT:    s_cbranch_execnz .LBB17_1
; VI-NEXT:  ; %bb.2:
; VI-NEXT:    s_mov_b64 exec, s[2:3]
; VI-NEXT:    v_mov_b32_e32 v22, s4
; VI-NEXT:    v_mov_b32_e32 v23, s5
; VI-NEXT:    s_mov_b64 s[0:1], exec
; VI-NEXT:  .LBB17_3: ; =>This Inner Loop Header: Depth=1
; VI-NEXT:    v_readfirstlane_b32 s2, v22
; VI-NEXT:    v_readfirstlane_b32 s4, v23
; VI-NEXT:    v_cmp_eq_u32_e64 s[2:3], s2, v22
; VI-NEXT:    v_cmp_eq_u32_e64 s[4:5], s4, v23
; VI-NEXT:    s_and_b64 s[2:3], s[2:3], s[4:5]
; VI-NEXT:    s_and_saveexec_b64 s[2:3], s[2:3]
; VI-NEXT:    v_readfirstlane_b32 s8, v8
; VI-NEXT:    v_readfirstlane_b32 s9, v9
; VI-NEXT:    v_readfirstlane_b32 s10, v10
; VI-NEXT:    v_readfirstlane_b32 s11, v11
; VI-NEXT:    v_readfirstlane_b32 s12, v12
; VI-NEXT:    v_readfirstlane_b32 s13, v13
; VI-NEXT:    v_readfirstlane_b32 s14, v14
; VI-NEXT:    v_readfirstlane_b32 s15, v15
; VI-NEXT:    v_readfirstlane_b32 s16, v16
; VI-NEXT:    v_readfirstlane_b32 s17, v17
; VI-NEXT:    v_readfirstlane_b32 s18, v18
; VI-NEXT:    v_readfirstlane_b32 s19, v19
; VI-NEXT:    ; implicit-def: $vgpr22
; VI-NEXT:    ; implicit-def: $vgpr23
; VI-NEXT:    ; implicit-def: $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
; VI-NEXT:    ; implicit-def: $vgpr16_vgpr17_vgpr18_vgpr19
; VI-NEXT:    s_nop 4
; VI-NEXT:    image_sample v[4:7], v[20:21], s[8:15], s[16:19] dmask:0xf
; VI-NEXT:    ; implicit-def: $vgpr20_vgpr21
; VI-NEXT:    s_xor_b64 exec, exec, s[2:3]
; VI-NEXT:    s_cbranch_execnz .LBB17_3
; VI-NEXT:  ; %bb.4:
; VI-NEXT:    s_mov_b64 exec, s[0:1]
; VI-NEXT:    s_and_b64 exec, exec, s[6:7]
; VI-NEXT:    s_waitcnt vmcnt(0)
; VI-NEXT:    ; return to shader part epilog
;
; GFX9-LABEL: test_waterfall_multi_begin_uniform_idx_1_2loops:
; GFX9:       ; %bb.0:
; GFX9-NEXT:    s_mov_b64 s[6:7], exec
; GFX9-NEXT:    s_wqm_b64 exec, exec
; GFX9-NEXT:    v_mov_b32_e32 v6, v3
; GFX9-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; GFX9-NEXT:    v_mov_b32_e32 v4, v0
; GFX9-NEXT:    v_mov_b32_e32 v5, v1
; GFX9-NEXT:    v_lshlrev_b64 v[0:1], 5, v[2:3]
; GFX9-NEXT:    v_mov_b32_e32 v3, s1
; GFX9-NEXT:    v_mov_b32_e32 v2, s0
; GFX9-NEXT:    v_add_co_u32_e32 v0, vcc, v2, v0
; GFX9-NEXT:    v_ashrrev_i32_e32 v7, 31, v6
; GFX9-NEXT:    v_addc_co_u32_e32 v1, vcc, v3, v1, vcc
; GFX9-NEXT:    v_lshlrev_b64 v[2:3], 4, v[6:7]
; GFX9-NEXT:    v_mov_b32_e32 v7, s3
; GFX9-NEXT:    v_mov_b32_e32 v6, s2
; GFX9-NEXT:    v_add_co_u32_e32 v2, vcc, v6, v2
; GFX9-NEXT:    v_addc_co_u32_e32 v3, vcc, v7, v3, vcc
; GFX9-NEXT:    global_load_dwordx4 v[8:11], v[0:1], off
; GFX9-NEXT:    global_load_dwordx4 v[12:15], v[0:1], off offset:16
; GFX9-NEXT:    global_load_dwordx4 v[16:19], v[2:3], off
; GFX9-NEXT:    s_mov_b32 s0, 0
; GFX9-NEXT:    s_mov_b64 s[2:3], exec
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:  .LBB17_1: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s1, v4
; GFX9-NEXT:    v_readfirstlane_b32 s10, v5
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[8:9], s1, v4
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[10:11], s10, v5
; GFX9-NEXT:    s_and_b64 s[8:9], s[8:9], s[10:11]
; GFX9-NEXT:    s_and_saveexec_b64 s[20:21], s[8:9]
; GFX9-NEXT:    s_mov_b32 s1, s0
; GFX9-NEXT:    v_mov_b32_e32 v21, s1
; GFX9-NEXT:    v_readfirstlane_b32 s8, v8
; GFX9-NEXT:    v_readfirstlane_b32 s9, v9
; GFX9-NEXT:    v_readfirstlane_b32 s10, v10
; GFX9-NEXT:    v_readfirstlane_b32 s11, v11
; GFX9-NEXT:    v_readfirstlane_b32 s12, v12
; GFX9-NEXT:    v_readfirstlane_b32 s13, v13
; GFX9-NEXT:    v_readfirstlane_b32 s14, v14
; GFX9-NEXT:    v_readfirstlane_b32 s15, v15
; GFX9-NEXT:    v_readfirstlane_b32 s16, v16
; GFX9-NEXT:    v_readfirstlane_b32 s17, v17
; GFX9-NEXT:    v_readfirstlane_b32 s18, v18
; GFX9-NEXT:    v_readfirstlane_b32 s19, v19
; GFX9-NEXT:    v_mov_b32_e32 v20, s0
; GFX9-NEXT:    ; implicit-def: $vgpr4
; GFX9-NEXT:    ; implicit-def: $vgpr5
; GFX9-NEXT:    s_nop 3
; GFX9-NEXT:    image_sample v[0:3], v[20:21], s[8:15], s[16:19] dmask:0xf
; GFX9-NEXT:    s_xor_b64 exec, exec, s[20:21]
; GFX9-NEXT:    s_cbranch_execnz .LBB17_1
; GFX9-NEXT:  ; %bb.2:
; GFX9-NEXT:    s_mov_b64 exec, s[2:3]
; GFX9-NEXT:    v_mov_b32_e32 v22, s4
; GFX9-NEXT:    v_mov_b32_e32 v23, s5
; GFX9-NEXT:    s_mov_b64 s[0:1], exec
; GFX9-NEXT:  .LBB17_3: ; =>This Inner Loop Header: Depth=1
; GFX9-NEXT:    v_readfirstlane_b32 s2, v22
; GFX9-NEXT:    v_readfirstlane_b32 s4, v23
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[2:3], s2, v22
; GFX9-NEXT:    v_cmp_eq_u32_e64 s[4:5], s4, v23
; GFX9-NEXT:    s_and_b64 s[2:3], s[2:3], s[4:5]
; GFX9-NEXT:    s_and_saveexec_b64 s[2:3], s[2:3]
; GFX9-NEXT:    v_readfirstlane_b32 s8, v8
; GFX9-NEXT:    v_readfirstlane_b32 s9, v9
; GFX9-NEXT:    v_readfirstlane_b32 s10, v10
; GFX9-NEXT:    v_readfirstlane_b32 s11, v11
; GFX9-NEXT:    v_readfirstlane_b32 s12, v12
; GFX9-NEXT:    v_readfirstlane_b32 s13, v13
; GFX9-NEXT:    v_readfirstlane_b32 s14, v14
; GFX9-NEXT:    v_readfirstlane_b32 s15, v15
; GFX9-NEXT:    v_readfirstlane_b32 s16, v16
; GFX9-NEXT:    v_readfirstlane_b32 s17, v17
; GFX9-NEXT:    v_readfirstlane_b32 s18, v18
; GFX9-NEXT:    v_readfirstlane_b32 s19, v19
; GFX9-NEXT:    ; implicit-def: $vgpr22
; GFX9-NEXT:    ; implicit-def: $vgpr23
; GFX9-NEXT:    ; implicit-def: $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
; GFX9-NEXT:    ; implicit-def: $vgpr16_vgpr17_vgpr18_vgpr19
; GFX9-NEXT:    s_nop 4
; GFX9-NEXT:    image_sample v[4:7], v[20:21], s[8:15], s[16:19] dmask:0xf
; GFX9-NEXT:    ; implicit-def: $vgpr20_vgpr21
; GFX9-NEXT:    s_xor_b64 exec, exec, s[2:3]
; GFX9-NEXT:    s_cbranch_execnz .LBB17_3
; GFX9-NEXT:  ; %bb.4:
; GFX9-NEXT:    s_mov_b64 exec, s[0:1]
; GFX9-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX9-NEXT:    s_waitcnt vmcnt(0)
; GFX9-NEXT:    ; return to shader part epilog
;
; GFX10-32-LABEL: test_waterfall_multi_begin_uniform_idx_1_2loops:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_mov_b32 s6, exec_lo
; GFX10-32-NEXT:    s_wqm_b32 exec_lo, exec_lo
; GFX10-32-NEXT:    v_mov_b32_e32 v6, v3
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; GFX10-32-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-32-NEXT:    v_mov_b32_e32 v5, v1
; GFX10-32-NEXT:    v_mov_b32_e32 v9, s3
; GFX10-32-NEXT:    v_ashrrev_i32_e32 v7, 31, v6
; GFX10-32-NEXT:    v_lshlrev_b64 v[0:1], 5, v[2:3]
; GFX10-32-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-32-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-32-NEXT:    v_mov_b32_e32 v8, s2
; GFX10-32-NEXT:    v_lshlrev_b64 v[6:7], 4, v[6:7]
; GFX10-32-NEXT:    s_mov_b32 s0, 0
; GFX10-32-NEXT:    s_mov_b32 s2, exec_lo
; GFX10-32-NEXT:    v_add_co_u32 v0, vcc_lo, v2, v0
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v1, vcc_lo, v3, v1, vcc_lo
; GFX10-32-NEXT:    v_add_co_u32 v2, vcc_lo, v8, v6
; GFX10-32-NEXT:    v_add_co_ci_u32_e32 v3, vcc_lo, v9, v7, vcc_lo
; GFX10-32-NEXT:    s_clause 0x1
; GFX10-32-NEXT:    global_load_dwordx4 v[8:11], v[0:1], off
; GFX10-32-NEXT:    global_load_dwordx4 v[12:15], v[0:1], off offset:16
; GFX10-32-NEXT:    global_load_dwordx4 v[16:19], v[2:3], off
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:  .LBB17_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v4
; GFX10-32-NEXT:    v_readfirstlane_b32 s3, v5
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s1, s1, v4
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s3, s3, v5
; GFX10-32-NEXT:    s_and_b32 s1, s1, s3
; GFX10-32-NEXT:    s_and_saveexec_b32 s3, s1
; GFX10-32-NEXT:    s_mov_b32 s1, s0
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v8
; GFX10-32-NEXT:    v_mov_b32_e32 v21, s1
; GFX10-32-NEXT:    v_readfirstlane_b32 s9, v9
; GFX10-32-NEXT:    v_readfirstlane_b32 s10, v10
; GFX10-32-NEXT:    v_readfirstlane_b32 s11, v11
; GFX10-32-NEXT:    v_readfirstlane_b32 s12, v12
; GFX10-32-NEXT:    v_readfirstlane_b32 s13, v13
; GFX10-32-NEXT:    v_readfirstlane_b32 s14, v14
; GFX10-32-NEXT:    v_readfirstlane_b32 s15, v15
; GFX10-32-NEXT:    v_readfirstlane_b32 s16, v16
; GFX10-32-NEXT:    v_readfirstlane_b32 s17, v17
; GFX10-32-NEXT:    v_readfirstlane_b32 s18, v18
; GFX10-32-NEXT:    v_readfirstlane_b32 s19, v19
; GFX10-32-NEXT:    v_mov_b32_e32 v20, s0
; GFX10-32-NEXT:    ; implicit-def: $vgpr4
; GFX10-32-NEXT:    ; implicit-def: $vgpr5
; GFX10-32-NEXT:    image_sample v[0:3], v[20:21], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s3
; GFX10-32-NEXT:    s_cbranch_execnz .LBB17_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s2
; GFX10-32-NEXT:    v_mov_b32_e32 v22, s4
; GFX10-32-NEXT:    v_mov_b32_e32 v23, s5
; GFX10-32-NEXT:    s_mov_b32 s0, exec_lo
; GFX10-32-NEXT:  .LBB17_3: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s1, v22
; GFX10-32-NEXT:    v_readfirstlane_b32 s2, v23
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s1, s1, v22
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s2, s2, v23
; GFX10-32-NEXT:    s_and_b32 s1, s1, s2
; GFX10-32-NEXT:    s_and_saveexec_b32 s1, s1
; GFX10-32-NEXT:    v_readfirstlane_b32 s8, v8
; GFX10-32-NEXT:    v_readfirstlane_b32 s9, v9
; GFX10-32-NEXT:    v_readfirstlane_b32 s10, v10
; GFX10-32-NEXT:    v_readfirstlane_b32 s11, v11
; GFX10-32-NEXT:    v_readfirstlane_b32 s12, v12
; GFX10-32-NEXT:    v_readfirstlane_b32 s13, v13
; GFX10-32-NEXT:    v_readfirstlane_b32 s14, v14
; GFX10-32-NEXT:    v_readfirstlane_b32 s15, v15
; GFX10-32-NEXT:    v_readfirstlane_b32 s16, v16
; GFX10-32-NEXT:    v_readfirstlane_b32 s17, v17
; GFX10-32-NEXT:    v_readfirstlane_b32 s18, v18
; GFX10-32-NEXT:    v_readfirstlane_b32 s19, v19
; GFX10-32-NEXT:    ; implicit-def: $vgpr22
; GFX10-32-NEXT:    ; implicit-def: $vgpr23
; GFX10-32-NEXT:    ; implicit-def: $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
; GFX10-32-NEXT:    ; implicit-def: $vgpr16_vgpr17_vgpr18_vgpr19
; GFX10-32-NEXT:    image_sample v[4:7], v[20:21], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-32-NEXT:    ; implicit-def: $vgpr20_vgpr21
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s1
; GFX10-32-NEXT:    s_cbranch_execnz .LBB17_3
; GFX10-32-NEXT:  ; %bb.4:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s0
; GFX10-32-NEXT:    s_and_b32 exec_lo, exec_lo, s6
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    ; return to shader part epilog
;
; GFX10-64-LABEL: test_waterfall_multi_begin_uniform_idx_1_2loops:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    s_wqm_b64 exec, exec
; GFX10-64-NEXT:    v_mov_b32_e32 v6, v3
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v3, 31, v2
; GFX10-64-NEXT:    v_mov_b32_e32 v4, v0
; GFX10-64-NEXT:    v_mov_b32_e32 v5, v1
; GFX10-64-NEXT:    v_mov_b32_e32 v9, s3
; GFX10-64-NEXT:    v_ashrrev_i32_e32 v7, 31, v6
; GFX10-64-NEXT:    v_lshlrev_b64 v[0:1], 5, v[2:3]
; GFX10-64-NEXT:    v_mov_b32_e32 v3, s1
; GFX10-64-NEXT:    v_mov_b32_e32 v2, s0
; GFX10-64-NEXT:    v_mov_b32_e32 v8, s2
; GFX10-64-NEXT:    v_lshlrev_b64 v[6:7], 4, v[6:7]
; GFX10-64-NEXT:    s_mov_b32 s0, 0
; GFX10-64-NEXT:    s_mov_b64 s[2:3], exec
; GFX10-64-NEXT:    v_add_co_u32 v0, vcc, v2, v0
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v1, vcc, v3, v1, vcc
; GFX10-64-NEXT:    v_add_co_u32 v2, vcc, v8, v6
; GFX10-64-NEXT:    v_add_co_ci_u32_e32 v3, vcc, v9, v7, vcc
; GFX10-64-NEXT:    s_clause 0x1
; GFX10-64-NEXT:    global_load_dwordx4 v[8:11], v[0:1], off
; GFX10-64-NEXT:    global_load_dwordx4 v[12:15], v[0:1], off offset:16
; GFX10-64-NEXT:    global_load_dwordx4 v[16:19], v[2:3], off
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:  .LBB17_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s1, v4
; GFX10-64-NEXT:    v_readfirstlane_b32 s10, v5
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[8:9], s1, v4
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[10:11], s10, v5
; GFX10-64-NEXT:    s_and_b64 s[8:9], s[8:9], s[10:11]
; GFX10-64-NEXT:    s_and_saveexec_b64 s[20:21], s[8:9]
; GFX10-64-NEXT:    s_mov_b32 s1, s0
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v8
; GFX10-64-NEXT:    v_mov_b32_e32 v21, s1
; GFX10-64-NEXT:    v_readfirstlane_b32 s9, v9
; GFX10-64-NEXT:    v_readfirstlane_b32 s10, v10
; GFX10-64-NEXT:    v_readfirstlane_b32 s11, v11
; GFX10-64-NEXT:    v_readfirstlane_b32 s12, v12
; GFX10-64-NEXT:    v_readfirstlane_b32 s13, v13
; GFX10-64-NEXT:    v_readfirstlane_b32 s14, v14
; GFX10-64-NEXT:    v_readfirstlane_b32 s15, v15
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v16
; GFX10-64-NEXT:    v_readfirstlane_b32 s17, v17
; GFX10-64-NEXT:    v_readfirstlane_b32 s18, v18
; GFX10-64-NEXT:    v_readfirstlane_b32 s19, v19
; GFX10-64-NEXT:    v_mov_b32_e32 v20, s0
; GFX10-64-NEXT:    ; implicit-def: $vgpr4
; GFX10-64-NEXT:    ; implicit-def: $vgpr5
; GFX10-64-NEXT:    image_sample v[0:3], v[20:21], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[20:21]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB17_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[2:3]
; GFX10-64-NEXT:    v_mov_b32_e32 v22, s4
; GFX10-64-NEXT:    v_mov_b32_e32 v23, s5
; GFX10-64-NEXT:    s_mov_b64 s[0:1], exec
; GFX10-64-NEXT:  .LBB17_3: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s2, v22
; GFX10-64-NEXT:    v_readfirstlane_b32 s4, v23
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[2:3], s2, v22
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[4:5], s4, v23
; GFX10-64-NEXT:    s_and_b64 s[2:3], s[2:3], s[4:5]
; GFX10-64-NEXT:    s_and_saveexec_b64 s[2:3], s[2:3]
; GFX10-64-NEXT:    v_readfirstlane_b32 s8, v8
; GFX10-64-NEXT:    v_readfirstlane_b32 s9, v9
; GFX10-64-NEXT:    v_readfirstlane_b32 s10, v10
; GFX10-64-NEXT:    v_readfirstlane_b32 s11, v11
; GFX10-64-NEXT:    v_readfirstlane_b32 s12, v12
; GFX10-64-NEXT:    v_readfirstlane_b32 s13, v13
; GFX10-64-NEXT:    v_readfirstlane_b32 s14, v14
; GFX10-64-NEXT:    v_readfirstlane_b32 s15, v15
; GFX10-64-NEXT:    v_readfirstlane_b32 s16, v16
; GFX10-64-NEXT:    v_readfirstlane_b32 s17, v17
; GFX10-64-NEXT:    v_readfirstlane_b32 s18, v18
; GFX10-64-NEXT:    v_readfirstlane_b32 s19, v19
; GFX10-64-NEXT:    ; implicit-def: $vgpr22
; GFX10-64-NEXT:    ; implicit-def: $vgpr23
; GFX10-64-NEXT:    ; implicit-def: $vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
; GFX10-64-NEXT:    ; implicit-def: $vgpr16_vgpr17_vgpr18_vgpr19
; GFX10-64-NEXT:    image_sample v[4:7], v[20:21], s[8:15], s[16:19] dmask:0xf dim:SQ_RSRC_IMG_2D
; GFX10-64-NEXT:    ; implicit-def: $vgpr20_vgpr21
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[2:3]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB17_3
; GFX10-64-NEXT:  ; %bb.4:
; GFX10-64-NEXT:    s_mov_b64 exec, s[0:1]
; GFX10-64-NEXT:    s_and_b64 exec, exec, s[6:7]
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    ; return to shader part epilog
       <8 x i32> addrspace(4)* inreg %in, <4 x i32> addrspace(4)* inreg %s_in,
       i32 %idx1, i32 %idx2, i32 inreg %idx3, i32 inreg%idx4,
       i32 %s_idx, i32 %s_idx2) #1 {
  %rptr = getelementptr <8 x i32>, <8 x i32> addrspace(4)* %in, i32 %s_idx
  %sptr = getelementptr <4 x i32>, <4 x i32> addrspace(4)* %s_in, i32 %s_idx2
  %rsrc = load <8 x i32>, <8 x i32> addrspace(4)* %rptr, align 16
  %srsrc = load <4 x i32>, <4 x i32> addrspace(4)* %sptr, align 16
  %tok = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %idx1)
  %tok1 = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 %tok, i32 %idx2)
  %s_rsrc = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %tok1, <8 x i32> %rsrc)
  %s_srsrc = call <4 x i32> @llvm.amdgcn.waterfall.readfirstlane.v4i32.v4i32(i32 %tok1, <4 x i32> %srsrc)
  %r = call <4 x float> @llvm.amdgcn.image.sample.2d.v4f32.f32(i32 15, float 0.000000e+00, float 0.000000e+00, <8 x i32> %s_rsrc, <4 x i32> %s_srsrc, i1 false, i32 0, i32 0)
  %r1 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %tok1, <4 x float> %r)

  %tok2 = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %idx3)
  %tok3 = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 %tok2, i32 %idx4)
  %s_rsrc1 = call <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32 %tok3, <8 x i32> %rsrc)
  %s_srsrc1 = call <4 x i32> @llvm.amdgcn.waterfall.readfirstlane.v4i32.v4i32(i32 %tok3, <4 x i32> %srsrc)
  %r2 = call <4 x float> @llvm.amdgcn.image.sample.2d.v4f32.f32(i32 15, float 0.000000e+00, float 0.000000e+00, <8 x i32> %s_rsrc1, <4 x i32> %s_srsrc1, i1 false, i32 0, i32 0)
  %r3 = call <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32 %tok3, <4 x float> %r2)

  %insert = insertvalue { <4 x float>, <4 x float> } undef, <4 x float> %r1, 0
  %insert1 = insertvalue { <4 x float>, <4 x float> } %insert, <4 x float> %r3, 1
  ret {<4 x float> , <4 x float>} %insert1
}

define amdgpu_gfx i32 @test_indirect_call_vgpr_ptr_arg_and_reuse(i32 %i, i32 %fptr) {
; PRE-GFX10-LABEL: test_indirect_call_vgpr_ptr_arg_and_reuse:
; PRE-GFX10:       ; %bb.0:
; PRE-GFX10-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; PRE-GFX10-NEXT:    s_mov_b32 s34, s33
; PRE-GFX10-NEXT:    s_mov_b32 s33, s32
; PRE-GFX10-NEXT:    s_or_saveexec_b64 s[36:37], -1
; PRE-GFX10-NEXT:    buffer_store_dword v40, off, s[0:3], s33 ; 4-byte Folded Spill
; PRE-GFX10-NEXT:    s_mov_b64 exec, s[36:37]
; PRE-GFX10-NEXT:    v_writelane_b32 v40, s34, 8
; PRE-GFX10-NEXT:    v_writelane_b32 v40, s4, 0
; PRE-GFX10-NEXT:    v_writelane_b32 v40, s5, 1
; PRE-GFX10-NEXT:    v_writelane_b32 v40, s6, 2
; PRE-GFX10-NEXT:    v_writelane_b32 v40, s7, 3
; PRE-GFX10-NEXT:    v_writelane_b32 v40, s8, 4
; PRE-GFX10-NEXT:    v_writelane_b32 v40, s9, 5
; PRE-GFX10-NEXT:    v_writelane_b32 v40, s30, 6
; PRE-GFX10-NEXT:    v_writelane_b32 v40, s31, 7
; PRE-GFX10-NEXT:    s_mov_b32 s5, 0
; PRE-GFX10-NEXT:    s_mov_b64 s[6:7], exec
; PRE-GFX10-NEXT:    s_addk_i32 s32, 0x400
; PRE-GFX10-NEXT:  .LBB18_1: ; =>This Inner Loop Header: Depth=1
; PRE-GFX10-NEXT:    v_readfirstlane_b32 s4, v1
; PRE-GFX10-NEXT:    v_cmp_eq_u32_e64 s[34:35], s4, v1
; PRE-GFX10-NEXT:    s_and_saveexec_b64 s[8:9], s[34:35]
; PRE-GFX10-NEXT:    s_swappc_b64 s[30:31], s[4:5]
; PRE-GFX10-NEXT:    v_mov_b32_e32 v2, v0
; PRE-GFX10-NEXT:    ; implicit-def: $vgpr1
; PRE-GFX10-NEXT:    ; implicit-def: $vgpr0
; PRE-GFX10-NEXT:    s_xor_b64 exec, exec, s[8:9]
; PRE-GFX10-NEXT:    s_cbranch_execnz .LBB18_1
; PRE-GFX10-NEXT:  ; %bb.2:
; PRE-GFX10-NEXT:    s_mov_b64 exec, s[6:7]
; PRE-GFX10-NEXT:    v_mov_b32_e32 v0, v2
; PRE-GFX10-NEXT:    v_readlane_b32 s31, v40, 7
; PRE-GFX10-NEXT:    v_readlane_b32 s30, v40, 6
; PRE-GFX10-NEXT:    v_readlane_b32 s9, v40, 5
; PRE-GFX10-NEXT:    v_readlane_b32 s8, v40, 4
; PRE-GFX10-NEXT:    v_readlane_b32 s7, v40, 3
; PRE-GFX10-NEXT:    v_readlane_b32 s6, v40, 2
; PRE-GFX10-NEXT:    v_readlane_b32 s5, v40, 1
; PRE-GFX10-NEXT:    v_readlane_b32 s4, v40, 0
; PRE-GFX10-NEXT:    v_readlane_b32 s34, v40, 8
; PRE-GFX10-NEXT:    s_or_saveexec_b64 s[36:37], -1
; PRE-GFX10-NEXT:    buffer_load_dword v40, off, s[0:3], s33 ; 4-byte Folded Reload
; PRE-GFX10-NEXT:    s_mov_b64 exec, s[36:37]
; PRE-GFX10-NEXT:    s_addk_i32 s32, 0xfc00
; PRE-GFX10-NEXT:    s_mov_b32 s33, s34
; PRE-GFX10-NEXT:    s_waitcnt vmcnt(0)
; PRE-GFX10-NEXT:    s_setpc_b64 s[30:31]
;
; GFX10-32-LABEL: test_indirect_call_vgpr_ptr_arg_and_reuse:
; GFX10-32:       ; %bb.0:
; GFX10-32-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX10-32-NEXT:    s_mov_b32 s34, s33
; GFX10-32-NEXT:    s_mov_b32 s33, s32
; GFX10-32-NEXT:    s_or_saveexec_b32 s35, -1
; GFX10-32-NEXT:    buffer_store_dword v40, off, s[0:3], s33 ; 4-byte Folded Spill
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s35
; GFX10-32-NEXT:    v_writelane_b32 v40, s34, 6
; GFX10-32-NEXT:    s_addk_i32 s32, 0x200
; GFX10-32-NEXT:    v_writelane_b32 v40, s4, 0
; GFX10-32-NEXT:    v_writelane_b32 v40, s5, 1
; GFX10-32-NEXT:    s_mov_b32 s5, 0
; GFX10-32-NEXT:    v_writelane_b32 v40, s6, 2
; GFX10-32-NEXT:    s_mov_b32 s6, exec_lo
; GFX10-32-NEXT:    v_writelane_b32 v40, s7, 3
; GFX10-32-NEXT:    v_writelane_b32 v40, s30, 4
; GFX10-32-NEXT:    v_writelane_b32 v40, s31, 5
; GFX10-32-NEXT:  .LBB18_1: ; =>This Inner Loop Header: Depth=1
; GFX10-32-NEXT:    v_readfirstlane_b32 s4, v1
; GFX10-32-NEXT:    v_cmp_eq_u32_e64 s34, s4, v1
; GFX10-32-NEXT:    s_and_saveexec_b32 s7, s34
; GFX10-32-NEXT:    s_swappc_b64 s[30:31], s[4:5]
; GFX10-32-NEXT:    v_mov_b32_e32 v2, v0
; GFX10-32-NEXT:    ; implicit-def: $vgpr1
; GFX10-32-NEXT:    ; implicit-def: $vgpr0
; GFX10-32-NEXT:    s_xor_b32 exec_lo, exec_lo, s7
; GFX10-32-NEXT:    s_cbranch_execnz .LBB18_1
; GFX10-32-NEXT:  ; %bb.2:
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s6
; GFX10-32-NEXT:    v_mov_b32_e32 v0, v2
; GFX10-32-NEXT:    v_readlane_b32 s31, v40, 5
; GFX10-32-NEXT:    v_readlane_b32 s30, v40, 4
; GFX10-32-NEXT:    v_readlane_b32 s7, v40, 3
; GFX10-32-NEXT:    v_readlane_b32 s6, v40, 2
; GFX10-32-NEXT:    v_readlane_b32 s5, v40, 1
; GFX10-32-NEXT:    v_readlane_b32 s4, v40, 0
; GFX10-32-NEXT:    v_readlane_b32 s34, v40, 6
; GFX10-32-NEXT:    s_or_saveexec_b32 s35, -1
; GFX10-32-NEXT:    buffer_load_dword v40, off, s[0:3], s33 ; 4-byte Folded Reload
; GFX10-32-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-32-NEXT:    s_mov_b32 exec_lo, s35
; GFX10-32-NEXT:    s_addk_i32 s32, 0xfe00
; GFX10-32-NEXT:    s_mov_b32 s33, s34
; GFX10-32-NEXT:    s_waitcnt vmcnt(0)
; GFX10-32-NEXT:    s_setpc_b64 s[30:31]
;
; GFX10-64-LABEL: test_indirect_call_vgpr_ptr_arg_and_reuse:
; GFX10-64:       ; %bb.0:
; GFX10-64-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX10-64-NEXT:    s_mov_b32 s34, s33
; GFX10-64-NEXT:    s_mov_b32 s33, s32
; GFX10-64-NEXT:    s_or_saveexec_b64 s[36:37], -1
; GFX10-64-NEXT:    buffer_store_dword v40, off, s[0:3], s33 ; 4-byte Folded Spill
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_mov_b64 exec, s[36:37]
; GFX10-64-NEXT:    v_writelane_b32 v40, s34, 8
; GFX10-64-NEXT:    s_addk_i32 s32, 0x400
; GFX10-64-NEXT:    v_writelane_b32 v40, s4, 0
; GFX10-64-NEXT:    v_writelane_b32 v40, s5, 1
; GFX10-64-NEXT:    s_mov_b32 s5, 0
; GFX10-64-NEXT:    v_writelane_b32 v40, s6, 2
; GFX10-64-NEXT:    v_writelane_b32 v40, s7, 3
; GFX10-64-NEXT:    s_mov_b64 s[6:7], exec
; GFX10-64-NEXT:    v_writelane_b32 v40, s8, 4
; GFX10-64-NEXT:    v_writelane_b32 v40, s9, 5
; GFX10-64-NEXT:    v_writelane_b32 v40, s30, 6
; GFX10-64-NEXT:    v_writelane_b32 v40, s31, 7
; GFX10-64-NEXT:  .LBB18_1: ; =>This Inner Loop Header: Depth=1
; GFX10-64-NEXT:    v_readfirstlane_b32 s4, v1
; GFX10-64-NEXT:    v_cmp_eq_u32_e64 s[34:35], s4, v1
; GFX10-64-NEXT:    s_and_saveexec_b64 s[8:9], s[34:35]
; GFX10-64-NEXT:    s_swappc_b64 s[30:31], s[4:5]
; GFX10-64-NEXT:    v_mov_b32_e32 v2, v0
; GFX10-64-NEXT:    ; implicit-def: $vgpr1
; GFX10-64-NEXT:    ; implicit-def: $vgpr0
; GFX10-64-NEXT:    s_xor_b64 exec, exec, s[8:9]
; GFX10-64-NEXT:    s_cbranch_execnz .LBB18_1
; GFX10-64-NEXT:  ; %bb.2:
; GFX10-64-NEXT:    s_mov_b64 exec, s[6:7]
; GFX10-64-NEXT:    v_mov_b32_e32 v0, v2
; GFX10-64-NEXT:    v_readlane_b32 s31, v40, 7
; GFX10-64-NEXT:    v_readlane_b32 s30, v40, 6
; GFX10-64-NEXT:    v_readlane_b32 s9, v40, 5
; GFX10-64-NEXT:    v_readlane_b32 s8, v40, 4
; GFX10-64-NEXT:    v_readlane_b32 s7, v40, 3
; GFX10-64-NEXT:    v_readlane_b32 s6, v40, 2
; GFX10-64-NEXT:    v_readlane_b32 s5, v40, 1
; GFX10-64-NEXT:    v_readlane_b32 s4, v40, 0
; GFX10-64-NEXT:    v_readlane_b32 s34, v40, 8
; GFX10-64-NEXT:    s_or_saveexec_b64 s[36:37], -1
; GFX10-64-NEXT:    buffer_load_dword v40, off, s[0:3], s33 ; 4-byte Folded Reload
; GFX10-64-NEXT:    s_waitcnt_depctr 0xffe3
; GFX10-64-NEXT:    s_mov_b64 exec, s[36:37]
; GFX10-64-NEXT:    s_addk_i32 s32, 0xfc00
; GFX10-64-NEXT:    s_mov_b32 s33, s34
; GFX10-64-NEXT:    s_waitcnt vmcnt(0)
; GFX10-64-NEXT:    s_setpc_b64 s[30:31]
  %tok = call i32 @llvm.amdgcn.waterfall.begin.i32(i32 0, i32 %fptr)
  %s_fptr = call i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32 %tok, i32 %fptr)
  %ext = zext i32 %s_fptr to i64
  %f = inttoptr i64 %ext to i32(i32)*
  %callres = call amdgpu_gfx i32 %f(i32 %i)
  %r3 = call i32 @llvm.amdgcn.waterfall.end.i32(i32 %tok, i32 %callres)
  ret i32 %r3
}

declare i32 @llvm.amdgcn.waterfall.begin.i32(i32, i32) #6
declare i32 @llvm.amdgcn.waterfall.begin.v2i32(i32, <2 x i32>) #6
declare i32 @llvm.amdgcn.waterfall.begin.v4i32(i32, <4 x i32>) #6
declare i32 @llvm.amdgcn.waterfall.begin.v8i32(i32, <8 x i32>) #1
declare i32 @llvm.amdgcn.waterfall.readfirstlane.i32.i32(i32, i32) #6
declare <2 x i32> @llvm.amdgcn.waterfall.readfirstlane.v2i32.v2i32(i32, <2 x i32>) #6
declare <8 x i32> @llvm.amdgcn.waterfall.readfirstlane.v8i32.v8i32(i32, <8 x i32>) #6
declare <4 x i32> @llvm.amdgcn.waterfall.readfirstlane.v4i32.v4i32(i32, <4 x i32>) #1
declare i16 @llvm.amdgcn.waterfall.end.i16(i32, i16) #6
declare i32 @llvm.amdgcn.waterfall.end.i32(i32, i32) #6
declare <4 x float> @llvm.amdgcn.waterfall.end.v4f32(i32, <4 x float>) #6
declare <8 x i32> @llvm.amdgcn.waterfall.end.v8i32(i32, <8 x i32>) #6
declare <8 x i32> @llvm.amdgcn.waterfall.last.use.v8i32(i32, <8 x i32>) #6
declare i32 @llvm.amdgcn.readlane(i32, i32) #0
declare <4 x float> @llvm.amdgcn.image.sample.1d.v4f32.f32(i32, float, <8 x i32>, <4 x i32>, i1, i32, i32)
declare <4 x float> @llvm.amdgcn.image.sample.2d.v4f32.f32(i32, float, float, <8 x i32>, <4 x i32>, i1, i32, i32)
declare void @llvm.amdgcn.image.store.1d.v4f32.i32(<4 x float>, i32, i32, <8 x i32>, i32, i32)
declare i64 @llvm.amdgcn.s.getpc() #3
declare float @llvm.amdgcn.buffer.load.ushort(<4 x i32>, i32, i32, i1, i1) #4
declare float @llvm.amdgcn.buffer.load.f32(<4 x i32>, i32, i32, i1, i1) #4
declare <4 x float> @llvm.amdgcn.buffer.load.v4f32(<4 x i32>, i32, i32, i1, i1) #4
declare i32 @llvm.amdgcn.s.buffer.load.i32(<4 x i32>, i32, i1) #2
declare <4 x i32> @llvm.amdgcn.s.buffer.load.v4i32(<4 x i32>, i32, i1) #2
declare void @llvm.amdgcn.buffer.store.short(float, <4 x i32>, i32, i32, i1, i1) #5
declare void @llvm.amdgcn.buffer.store.f32(float, <4 x i32>, i32, i32, i1, i1) #5
declare void @llvm.amdgcn.buffer.store.v4f32(<4 x float>, <4 x i32>, i32, i32, i1, i1) #5
declare void @llvm.amdgcn.kill(i1) #1
declare void @llvm.amdgcn.exp.f32(i32 immarg, i32 immarg, float, float, float, float, i1 immarg, i1 immarg) #7

attributes #0 = { nounwind readnone convergent }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind readonly }
attributes #5 = { nounwind writeonly }
attributes #6 = { nounwind }
attributes #7 = { inaccessiblememonly nounwind writeonly }
