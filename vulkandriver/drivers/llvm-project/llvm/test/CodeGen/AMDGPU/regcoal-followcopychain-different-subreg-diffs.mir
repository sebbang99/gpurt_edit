# RUN: llc -mtriple=amdgcn--amdgcn -mcpu=gfx803 -run-pass register-coalescer -o - %s | FileCheck --check-prefix=GCN %s
# REQUIRES: asserts
#
# This test will provoke a Couldn't join subrange unreachable without the
# associated fix.
#
# GCN: body:

---
name:            _amdgpu_ps_main
tracksRegLiveness: true
liveins:
  - { reg: '$sgpr0', virtual-reg: '%16' }
body:             |
  bb.0:
    successors: %bb.3, %bb.1
    liveins: $sgpr0

    %16:sgpr_32 = COPY killed $sgpr0
    $m0 = S_MOV_B32 killed %16
    %19:vgpr_32 = V_INTERP_P2_F32 undef %19, undef %21:vgpr_32, 0, 1, implicit $m0, implicit $exec, implicit $mode
    %24:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
    %23:vgpr_32 = V_MAD_F32_e64 0, killed %19, 0, 0, 0, 0, 0, 0, implicit $exec, implicit $mode
    undef %75.sub0:vreg_128 = COPY %24
    %75.sub2:vreg_128 = COPY %24
    %26:vgpr_32 = nnan arcp contract reassoc V_MUL_F32_e64 0, 0, 0, killed %23, 1, 0, implicit $exec, implicit $mode
    %0:vgpr_32 = V_MUL_F32_e32 0, killed %26, implicit $exec, implicit $mode
    %28:sreg_64 = V_CMP_NLT_F32_e64 0, 0, 0, killed %0, 0, implicit $exec, implicit $mode
    %89:vreg_128 = IMPLICIT_DEF
    %91:sreg_64 = COPY $exec, implicit-def $exec
    %92:sreg_64 = S_AND_B64 %91, %28, implicit-def dead $scc
    %2:sreg_64 = S_XOR_B64 %92, %91, implicit-def dead $scc
    $exec = S_MOV_B64_term killed %92
    S_CBRANCH_EXECZ %bb.1, implicit $exec
    S_BRANCH %bb.3

  bb.1:
    successors: %bb.2, %bb.4

    %93:sreg_64 = COPY killed %2
    %5:sreg_64 = S_OR_SAVEEXEC_B64 %93, implicit-def $exec, implicit-def $scc, implicit $exec
    %3:vreg_128 = COPY killed %89
    %90:vreg_128 = COPY killed %3
    $exec = S_XOR_B64_term $exec, %5, implicit-def $scc
    S_CBRANCH_EXECZ %bb.4, implicit $exec
    S_BRANCH %bb.2

  bb.2:
    dead %37:sreg_32 = S_MOV_B32 0
    %6:vreg_128 = COPY killed %75
    %6.sub3:vreg_128 = COPY undef %37
    %90:vreg_128 = COPY killed %6
    S_BRANCH %bb.4

  bb.3:
    %1:vreg_128 = COPY %75
    %89:vreg_128 = COPY killed %1
    S_BRANCH %bb.1

  bb.4:
    $exec = S_OR_B64 $exec, killed %5, implicit-def $scc
    %8:vreg_128 = COPY killed %90
    S_CBRANCH_SCC1 %bb.10, implicit undef $scc
    S_BRANCH %bb.5

  bb.5:
    successors: %bb.6, %bb.7

    S_CBRANCH_SCC1 %bb.7, implicit undef $scc
    S_BRANCH %bb.6

  bb.6:
    %43:vgpr_32 = V_MAD_F32_e64 0, %8.sub0, 0, target-flags(amdgpu-gotprel) 0, 0, 0, 0, 0, implicit $exec, implicit $mode
    %44:vgpr_32 = COPY killed %43
    %44:vgpr_32 = V_MAC_F32_e32 target-flags(amdgpu-gotprel32-hi) 0, killed %8.sub2, %44, implicit $exec, implicit $mode
    %45:vgpr_32 = V_ADD_F32_e32 0, killed %44, implicit $exec, implicit $mode
    %47:vgpr_32 = V_MOV_B32_e32 1107296256, implicit $exec
    %48:vgpr_32 = nnan arcp contract reassoc V_MAD_F32_e64 0, killed %45, 0, killed %47, 0, 1056964608, 0, 0, implicit $exec, implicit $mode
    %49:vgpr_32 = V_FLOOR_F32_e32 killed %48, implicit $exec, implicit $mode
    %50:vgpr_32 = V_CVT_I32_F32_e32 killed %49, implicit $exec, implicit $mode
    %81:vgpr_32 = V_ADD_CO_U32_e32 1, killed %50, implicit-def dead $vcc, implicit $exec
    dead %82:vgpr_32 = V_MIN_I32_e32 31, killed %81, implicit $exec

  bb.7:
    successors: %bb.8, %bb.9

    S_CBRANCH_SCC1 %bb.9, implicit undef $scc
    S_BRANCH %bb.8

  bb.8:

  bb.9:

  bb.10:
    S_CBRANCH_SCC1 %bb.17, implicit undef $scc
    S_BRANCH %bb.11

  bb.11:

  bb.12:
    successors: %bb.13, %bb.15

    S_CBRANCH_SCC1 %bb.15, implicit undef $scc
    S_BRANCH %bb.13

  bb.13:
    successors: %bb.14, %bb.15

    S_CBRANCH_SCC1 %bb.15, implicit undef $scc
    S_BRANCH %bb.14

  bb.14:

  bb.15:
    successors: %bb.16, %bb.12

    S_CBRANCH_SCC1 %bb.12, implicit undef $scc
    S_BRANCH %bb.16

  bb.16:
    successors: %bb.12(0x7c000000), %bb.17(0x04000000)

    dead %86:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
    %74:sreg_64 = S_AND_B64 $exec, -1, implicit-def dead $scc
    $vcc = COPY killed %74
    S_CBRANCH_VCCNZ %bb.12, implicit killed $vcc
    S_BRANCH %bb.17

  bb.17:
    S_ENDPGM 0

...
